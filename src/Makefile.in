# Makefile.in generated by automake 1.14 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

##############################################################################
#
# Polylib - Polygon Management Library
#
# Copyright (c) 2010-2011 VCAD System Research Program, RIKEN. 
# All rights reserved.
# 
# Copyright (c) 2012-2014 Advanced Institute for Computational Science, RIKEN.
# All rights reserved.
#
##############################################################################


VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
subdir = src
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/depcomp $(nobase_include_HEADERS)
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"
LIBRARIES = $(lib_LIBRARIES)
AR = ar
ARFLAGS = cru
AM_V_AR = $(am__v_AR_@AM_V@)
am__v_AR_ = $(am__v_AR_@AM_DEFAULT_V@)
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libPOLY_a_AR = $(AR) $(ARFLAGS)
libPOLY_a_LIBADD =
am__libPOLY_a_SOURCES_DIST = Polylib.cxx c_lang/CPolylib.cxx \
	common/BBox.cxx file_io/stl.cxx file_io/obj.cxx \
	file_io/vtk.cxx file_io/triangle_id.cxx file_io/TriMeshIO.cxx \
	groups/PolygonGroup.cxx groups/PolygonGroupFactory.cxx \
	polygons/DVertex.cxx polygons/DVertexManager.cxx \
	polygons/DVertexTriangle.cxx polygons/Polygons.cxx \
	polygons/PrivateTriangle.cxx polygons/Triangle.cxx \
	polygons/TriMesh.cxx polygons/VElement.cxx polygons/Vertex.cxx \
	polygons/VertexList.cxx polygons/VertKDT.cxx \
	polygons/VertKDTElem.cxx polygons/VertKDTNode.cxx \
	polygons/VNode.cxx polygons/VTree.cxx util/time.cxx
am__dirstamp = $(am__leading_dot)dirstamp
@SERIALTARGET_TRUE@am_libPOLY_a_OBJECTS = libPOLY_a-Polylib.$(OBJEXT) \
@SERIALTARGET_TRUE@	c_lang/libPOLY_a-CPolylib.$(OBJEXT) \
@SERIALTARGET_TRUE@	common/libPOLY_a-BBox.$(OBJEXT) \
@SERIALTARGET_TRUE@	file_io/libPOLY_a-stl.$(OBJEXT) \
@SERIALTARGET_TRUE@	file_io/libPOLY_a-obj.$(OBJEXT) \
@SERIALTARGET_TRUE@	file_io/libPOLY_a-vtk.$(OBJEXT) \
@SERIALTARGET_TRUE@	file_io/libPOLY_a-triangle_id.$(OBJEXT) \
@SERIALTARGET_TRUE@	file_io/libPOLY_a-TriMeshIO.$(OBJEXT) \
@SERIALTARGET_TRUE@	groups/libPOLY_a-PolygonGroup.$(OBJEXT) \
@SERIALTARGET_TRUE@	groups/libPOLY_a-PolygonGroupFactory.$(OBJEXT) \
@SERIALTARGET_TRUE@	polygons/libPOLY_a-DVertex.$(OBJEXT) \
@SERIALTARGET_TRUE@	polygons/libPOLY_a-DVertexManager.$(OBJEXT) \
@SERIALTARGET_TRUE@	polygons/libPOLY_a-DVertexTriangle.$(OBJEXT) \
@SERIALTARGET_TRUE@	polygons/libPOLY_a-Polygons.$(OBJEXT) \
@SERIALTARGET_TRUE@	polygons/libPOLY_a-PrivateTriangle.$(OBJEXT) \
@SERIALTARGET_TRUE@	polygons/libPOLY_a-Triangle.$(OBJEXT) \
@SERIALTARGET_TRUE@	polygons/libPOLY_a-TriMesh.$(OBJEXT) \
@SERIALTARGET_TRUE@	polygons/libPOLY_a-VElement.$(OBJEXT) \
@SERIALTARGET_TRUE@	polygons/libPOLY_a-Vertex.$(OBJEXT) \
@SERIALTARGET_TRUE@	polygons/libPOLY_a-VertexList.$(OBJEXT) \
@SERIALTARGET_TRUE@	polygons/libPOLY_a-VertKDT.$(OBJEXT) \
@SERIALTARGET_TRUE@	polygons/libPOLY_a-VertKDTElem.$(OBJEXT) \
@SERIALTARGET_TRUE@	polygons/libPOLY_a-VertKDTNode.$(OBJEXT) \
@SERIALTARGET_TRUE@	polygons/libPOLY_a-VNode.$(OBJEXT) \
@SERIALTARGET_TRUE@	polygons/libPOLY_a-VTree.$(OBJEXT) \
@SERIALTARGET_TRUE@	util/libPOLY_a-time.$(OBJEXT)
libPOLY_a_OBJECTS = $(am_libPOLY_a_OBJECTS)
libPOLYmpi_a_AR = $(AR) $(ARFLAGS)
libPOLYmpi_a_LIBADD =
am__libPOLYmpi_a_SOURCES_DIST = MPIPolylib.cxx Polylib.cxx \
	c_lang/CMPIPolylib.cxx c_lang/CPolylib.cxx common/BBox.cxx \
	file_io/stl.cxx file_io/obj.cxx file_io/vtk.cxx \
	file_io/triangle_id.cxx file_io/TriMeshIO.cxx \
	groups/PolygonGroup.cxx groups/PolygonGroupFactory.cxx \
	polygons/DVertex.cxx polygons/DVertexManager.cxx \
	polygons/DVertexTriangle.cxx polygons/Polygons.cxx \
	polygons/PrivateTriangle.cxx polygons/Triangle.cxx \
	polygons/TriMesh.cxx polygons/VElement.cxx polygons/Vertex.cxx \
	polygons/VertexList.cxx polygons/VertKDT.cxx \
	polygons/VertKDTElem.cxx polygons/VertKDTNode.cxx \
	polygons/VNode.cxx polygons/VTree.cxx util/time.cxx
@SERIALTARGET_FALSE@am_libPOLYmpi_a_OBJECTS =  \
@SERIALTARGET_FALSE@	libPOLYmpi_a-MPIPolylib.$(OBJEXT) \
@SERIALTARGET_FALSE@	libPOLYmpi_a-Polylib.$(OBJEXT) \
@SERIALTARGET_FALSE@	c_lang/libPOLYmpi_a-CMPIPolylib.$(OBJEXT) \
@SERIALTARGET_FALSE@	c_lang/libPOLYmpi_a-CPolylib.$(OBJEXT) \
@SERIALTARGET_FALSE@	common/libPOLYmpi_a-BBox.$(OBJEXT) \
@SERIALTARGET_FALSE@	file_io/libPOLYmpi_a-stl.$(OBJEXT) \
@SERIALTARGET_FALSE@	file_io/libPOLYmpi_a-obj.$(OBJEXT) \
@SERIALTARGET_FALSE@	file_io/libPOLYmpi_a-vtk.$(OBJEXT) \
@SERIALTARGET_FALSE@	file_io/libPOLYmpi_a-triangle_id.$(OBJEXT) \
@SERIALTARGET_FALSE@	file_io/libPOLYmpi_a-TriMeshIO.$(OBJEXT) \
@SERIALTARGET_FALSE@	groups/libPOLYmpi_a-PolygonGroup.$(OBJEXT) \
@SERIALTARGET_FALSE@	groups/libPOLYmpi_a-PolygonGroupFactory.$(OBJEXT) \
@SERIALTARGET_FALSE@	polygons/libPOLYmpi_a-DVertex.$(OBJEXT) \
@SERIALTARGET_FALSE@	polygons/libPOLYmpi_a-DVertexManager.$(OBJEXT) \
@SERIALTARGET_FALSE@	polygons/libPOLYmpi_a-DVertexTriangle.$(OBJEXT) \
@SERIALTARGET_FALSE@	polygons/libPOLYmpi_a-Polygons.$(OBJEXT) \
@SERIALTARGET_FALSE@	polygons/libPOLYmpi_a-PrivateTriangle.$(OBJEXT) \
@SERIALTARGET_FALSE@	polygons/libPOLYmpi_a-Triangle.$(OBJEXT) \
@SERIALTARGET_FALSE@	polygons/libPOLYmpi_a-TriMesh.$(OBJEXT) \
@SERIALTARGET_FALSE@	polygons/libPOLYmpi_a-VElement.$(OBJEXT) \
@SERIALTARGET_FALSE@	polygons/libPOLYmpi_a-Vertex.$(OBJEXT) \
@SERIALTARGET_FALSE@	polygons/libPOLYmpi_a-VertexList.$(OBJEXT) \
@SERIALTARGET_FALSE@	polygons/libPOLYmpi_a-VertKDT.$(OBJEXT) \
@SERIALTARGET_FALSE@	polygons/libPOLYmpi_a-VertKDTElem.$(OBJEXT) \
@SERIALTARGET_FALSE@	polygons/libPOLYmpi_a-VertKDTNode.$(OBJEXT) \
@SERIALTARGET_FALSE@	polygons/libPOLYmpi_a-VNode.$(OBJEXT) \
@SERIALTARGET_FALSE@	polygons/libPOLYmpi_a-VTree.$(OBJEXT) \
@SERIALTARGET_FALSE@	util/libPOLYmpi_a-time.$(OBJEXT)
libPOLYmpi_a_OBJECTS = $(am_libPOLYmpi_a_OBJECTS)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libPOLY_a_SOURCES) $(libPOLYmpi_a_SOURCES)
DIST_SOURCES = $(am__libPOLY_a_SOURCES_DIST) \
	$(am__libPOLYmpi_a_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(nobase_include_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MAKE_SUB_DIRS = @MAKE_SUB_DIRS@
MKDIR_P = @MKDIR_P@
MPI_CFLAGS = @MPI_CFLAGS@
MPI_DIR = @MPI_DIR@
MPI_LDFLAGS = @MPI_LDFLAGS@
MPI_LIBS = @MPI_LIBS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PL_CFLAGS = @PL_CFLAGS@
PL_CXX = @PL_CXX@
PL_LDFLAGS = @PL_LDFLAGS@
PL_LIBS = @PL_LIBS@
PL_REVISION = @PL_REVISION@
RANLIB = @RANLIB@
REAL_OPT = @REAL_OPT@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TP_CFLAGS = @TP_CFLAGS@
TP_DIR = @TP_DIR@
TP_LDFLAGS = @TP_LDFLAGS@
TP_MPI_LDFLAGS = @TP_MPI_LDFLAGS@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AUTOMAKE_OPTIONS = subdir-objects
#  lib_LTLIBRARIES = libPOLYmpi.la
#  libPOLYmpi_la_CXXFLAGS = @MPI_CFLAGS@ @TP_CFLAGS@ @REAL_OPT@ -I$(top_builddir)/include
#  libPOLYmpi_la_LDFLAGS = @LT_STATIC@
#  libPOLYmpi_la_SOURCES =
@SERIALTARGET_FALSE@lib_LIBRARIES = libPOLYmpi.a

#  lib_LTLIBRARIES = libPOLY.la
#  libPOLY_la_CXXFLAGS = @TP_CFLAGS@ @REAL_OPT@ -I$(top_builddir)/include
#  libPOLY_la_LDFLAGS = @LT_STATIC@
#  libPOLY_la_LDFLAGS = 
#  libPOLY_la_SOURCES =
@SERIALTARGET_TRUE@lib_LIBRARIES = libPOLY.a
@SERIALTARGET_TRUE@libPOLY_a_CXXFLAGS = @TP_CFLAGS@ @REAL_OPT@ -I$(top_builddir)/include
@SERIALTARGET_TRUE@libPOLY_a_SOURCES = \
@SERIALTARGET_TRUE@     Polylib.cxx \
@SERIALTARGET_TRUE@     c_lang/CPolylib.cxx \
@SERIALTARGET_TRUE@     common/BBox.cxx \
@SERIALTARGET_TRUE@     file_io/stl.cxx \
@SERIALTARGET_TRUE@     file_io/obj.cxx \
@SERIALTARGET_TRUE@     file_io/vtk.cxx \
@SERIALTARGET_TRUE@     file_io/triangle_id.cxx \
@SERIALTARGET_TRUE@     file_io/TriMeshIO.cxx \
@SERIALTARGET_TRUE@     groups/PolygonGroup.cxx \
@SERIALTARGET_TRUE@     groups/PolygonGroupFactory.cxx \
@SERIALTARGET_TRUE@     polygons/DVertex.cxx \
@SERIALTARGET_TRUE@     polygons/DVertexManager.cxx \
@SERIALTARGET_TRUE@     polygons/DVertexTriangle.cxx \
@SERIALTARGET_TRUE@     polygons/Polygons.cxx \
@SERIALTARGET_TRUE@     polygons/PrivateTriangle.cxx \
@SERIALTARGET_TRUE@     polygons/Triangle.cxx \
@SERIALTARGET_TRUE@     polygons/TriMesh.cxx \
@SERIALTARGET_TRUE@     polygons/VElement.cxx \
@SERIALTARGET_TRUE@     polygons/Vertex.cxx \
@SERIALTARGET_TRUE@     polygons/VertexList.cxx \
@SERIALTARGET_TRUE@     polygons/VertKDT.cxx \
@SERIALTARGET_TRUE@     polygons/VertKDTElem.cxx \
@SERIALTARGET_TRUE@     polygons/VertKDTNode.cxx \
@SERIALTARGET_TRUE@     polygons/VNode.cxx \
@SERIALTARGET_TRUE@     polygons/VTree.cxx \
@SERIALTARGET_TRUE@     util/time.cxx

@SERIALTARGET_FALSE@libPOLYmpi_a_CXXFLAGS = @MPI_CFLAGS@ @TP_CFLAGS@ @REAL_OPT@ -I$(top_builddir)/include
@SERIALTARGET_FALSE@libPOLYmpi_a_SOURCES = \
@SERIALTARGET_FALSE@     MPIPolylib.cxx \
@SERIALTARGET_FALSE@     Polylib.cxx \
@SERIALTARGET_FALSE@     c_lang/CMPIPolylib.cxx \
@SERIALTARGET_FALSE@     c_lang/CPolylib.cxx \
@SERIALTARGET_FALSE@     common/BBox.cxx \
@SERIALTARGET_FALSE@     file_io/stl.cxx \
@SERIALTARGET_FALSE@     file_io/obj.cxx \
@SERIALTARGET_FALSE@     file_io/vtk.cxx \
@SERIALTARGET_FALSE@     file_io/triangle_id.cxx \
@SERIALTARGET_FALSE@     file_io/TriMeshIO.cxx \
@SERIALTARGET_FALSE@     groups/PolygonGroup.cxx \
@SERIALTARGET_FALSE@     groups/PolygonGroupFactory.cxx \
@SERIALTARGET_FALSE@     polygons/DVertex.cxx \
@SERIALTARGET_FALSE@     polygons/DVertexManager.cxx \
@SERIALTARGET_FALSE@     polygons/DVertexTriangle.cxx \
@SERIALTARGET_FALSE@     polygons/Polygons.cxx \
@SERIALTARGET_FALSE@     polygons/PrivateTriangle.cxx \
@SERIALTARGET_FALSE@     polygons/Triangle.cxx \
@SERIALTARGET_FALSE@     polygons/TriMesh.cxx \
@SERIALTARGET_FALSE@     polygons/VElement.cxx \
@SERIALTARGET_FALSE@     polygons/Vertex.cxx \
@SERIALTARGET_FALSE@     polygons/VertexList.cxx \
@SERIALTARGET_FALSE@     polygons/VertKDT.cxx \
@SERIALTARGET_FALSE@     polygons/VertKDTElem.cxx \
@SERIALTARGET_FALSE@     polygons/VertKDTNode.cxx \
@SERIALTARGET_FALSE@     polygons/VNode.cxx \
@SERIALTARGET_FALSE@     polygons/VTree.cxx \
@SERIALTARGET_FALSE@     util/time.cxx

nobase_include_HEADERS = \
  $(top_builddir)/include/MPIPolylib.h \
  $(top_builddir)/include/Polylib.h \
  $(top_builddir)/include/c_lang/CMPIPolylib.h \
  $(top_builddir)/include/c_lang/CPolylib.h \
  $(top_builddir)/include/common/BBox.h \
  $(top_builddir)/include/common/PolylibCommon.h \
  $(top_builddir)/include/common/PolylibDefine.h \
  $(top_builddir)/include/common/PolylibStat.h \
  $(top_builddir)/include/common/tt.h \
  $(top_builddir)/include/common/Vec2.h \
  $(top_builddir)/include/common/Vec3.h \
  $(top_builddir)/include/file_io/stl.h \
  $(top_builddir)/include/file_io/obj.h \
  $(top_builddir)/include/file_io/vtk.h \
  $(top_builddir)/include/file_io/triangle_id.h \
  $(top_builddir)/include/file_io/TriMeshIO.h \
  $(top_builddir)/include/groups/PolygonGroup.h \
  $(top_builddir)/include/groups/PolygonGroupFactory.h \
  $(top_builddir)/include/polygons/DVertex.h \
  $(top_builddir)/include/polygons/DVertexManager.h \
  $(top_builddir)/include/polygons/DVertexTriangle.h \
  $(top_builddir)/include/polygons/Polygons.h \
  $(top_builddir)/include/polygons/PrivateTriangle.h \
  $(top_builddir)/include/polygons/Triangle.h \
  $(top_builddir)/include/polygons/TriMesh.h \
  $(top_builddir)/include/polygons/VElement.h \
  $(top_builddir)/include/polygons/Vertex.h \
  $(top_builddir)/include/polygons/VertexList.h \
  $(top_builddir)/include/polygons/VertKDT.h \
  $(top_builddir)/include/polygons/VertKDTElem.h \
  $(top_builddir)/include/polygons/VertKDTNode.h \
  $(top_builddir)/include/polygons/VNode.h \
  $(top_builddir)/include/polygons/VTree.h \
  $(top_builddir)/include/util/time.h \
  $(top_builddir)/include/polyVersion.h

EXTRA_DIST = Makefile_hand depend.inc
all: all-am

.SUFFIXES:
.SUFFIXES: .cxx .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(INSTALL_DATA) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(INSTALL_DATA) $$list2 "$(DESTDIR)$(libdir)" || exit $$?; }
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  if test -f $$p; then \
	    $(am__strip_dir) \
	    echo " ( cd '$(DESTDIR)$(libdir)' && $(RANLIB) $$f )"; \
	    ( cd "$(DESTDIR)$(libdir)" && $(RANLIB) $$f ) || exit $$?; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libdir)'; $(am__uninstall_files_from_dir)

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
c_lang/$(am__dirstamp):
	@$(MKDIR_P) c_lang
	@: > c_lang/$(am__dirstamp)
c_lang/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) c_lang/$(DEPDIR)
	@: > c_lang/$(DEPDIR)/$(am__dirstamp)
c_lang/libPOLY_a-CPolylib.$(OBJEXT): c_lang/$(am__dirstamp) \
	c_lang/$(DEPDIR)/$(am__dirstamp)
common/$(am__dirstamp):
	@$(MKDIR_P) common
	@: > common/$(am__dirstamp)
common/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) common/$(DEPDIR)
	@: > common/$(DEPDIR)/$(am__dirstamp)
common/libPOLY_a-BBox.$(OBJEXT): common/$(am__dirstamp) \
	common/$(DEPDIR)/$(am__dirstamp)
file_io/$(am__dirstamp):
	@$(MKDIR_P) file_io
	@: > file_io/$(am__dirstamp)
file_io/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) file_io/$(DEPDIR)
	@: > file_io/$(DEPDIR)/$(am__dirstamp)
file_io/libPOLY_a-stl.$(OBJEXT): file_io/$(am__dirstamp) \
	file_io/$(DEPDIR)/$(am__dirstamp)
file_io/libPOLY_a-obj.$(OBJEXT): file_io/$(am__dirstamp) \
	file_io/$(DEPDIR)/$(am__dirstamp)
file_io/libPOLY_a-vtk.$(OBJEXT): file_io/$(am__dirstamp) \
	file_io/$(DEPDIR)/$(am__dirstamp)
file_io/libPOLY_a-triangle_id.$(OBJEXT): file_io/$(am__dirstamp) \
	file_io/$(DEPDIR)/$(am__dirstamp)
file_io/libPOLY_a-TriMeshIO.$(OBJEXT): file_io/$(am__dirstamp) \
	file_io/$(DEPDIR)/$(am__dirstamp)
groups/$(am__dirstamp):
	@$(MKDIR_P) groups
	@: > groups/$(am__dirstamp)
groups/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) groups/$(DEPDIR)
	@: > groups/$(DEPDIR)/$(am__dirstamp)
groups/libPOLY_a-PolygonGroup.$(OBJEXT): groups/$(am__dirstamp) \
	groups/$(DEPDIR)/$(am__dirstamp)
groups/libPOLY_a-PolygonGroupFactory.$(OBJEXT):  \
	groups/$(am__dirstamp) groups/$(DEPDIR)/$(am__dirstamp)
polygons/$(am__dirstamp):
	@$(MKDIR_P) polygons
	@: > polygons/$(am__dirstamp)
polygons/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) polygons/$(DEPDIR)
	@: > polygons/$(DEPDIR)/$(am__dirstamp)
polygons/libPOLY_a-DVertex.$(OBJEXT): polygons/$(am__dirstamp) \
	polygons/$(DEPDIR)/$(am__dirstamp)
polygons/libPOLY_a-DVertexManager.$(OBJEXT): polygons/$(am__dirstamp) \
	polygons/$(DEPDIR)/$(am__dirstamp)
polygons/libPOLY_a-DVertexTriangle.$(OBJEXT):  \
	polygons/$(am__dirstamp) polygons/$(DEPDIR)/$(am__dirstamp)
polygons/libPOLY_a-Polygons.$(OBJEXT): polygons/$(am__dirstamp) \
	polygons/$(DEPDIR)/$(am__dirstamp)
polygons/libPOLY_a-PrivateTriangle.$(OBJEXT):  \
	polygons/$(am__dirstamp) polygons/$(DEPDIR)/$(am__dirstamp)
polygons/libPOLY_a-Triangle.$(OBJEXT): polygons/$(am__dirstamp) \
	polygons/$(DEPDIR)/$(am__dirstamp)
polygons/libPOLY_a-TriMesh.$(OBJEXT): polygons/$(am__dirstamp) \
	polygons/$(DEPDIR)/$(am__dirstamp)
polygons/libPOLY_a-VElement.$(OBJEXT): polygons/$(am__dirstamp) \
	polygons/$(DEPDIR)/$(am__dirstamp)
polygons/libPOLY_a-Vertex.$(OBJEXT): polygons/$(am__dirstamp) \
	polygons/$(DEPDIR)/$(am__dirstamp)
polygons/libPOLY_a-VertexList.$(OBJEXT): polygons/$(am__dirstamp) \
	polygons/$(DEPDIR)/$(am__dirstamp)
polygons/libPOLY_a-VertKDT.$(OBJEXT): polygons/$(am__dirstamp) \
	polygons/$(DEPDIR)/$(am__dirstamp)
polygons/libPOLY_a-VertKDTElem.$(OBJEXT): polygons/$(am__dirstamp) \
	polygons/$(DEPDIR)/$(am__dirstamp)
polygons/libPOLY_a-VertKDTNode.$(OBJEXT): polygons/$(am__dirstamp) \
	polygons/$(DEPDIR)/$(am__dirstamp)
polygons/libPOLY_a-VNode.$(OBJEXT): polygons/$(am__dirstamp) \
	polygons/$(DEPDIR)/$(am__dirstamp)
polygons/libPOLY_a-VTree.$(OBJEXT): polygons/$(am__dirstamp) \
	polygons/$(DEPDIR)/$(am__dirstamp)
util/$(am__dirstamp):
	@$(MKDIR_P) util
	@: > util/$(am__dirstamp)
util/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) util/$(DEPDIR)
	@: > util/$(DEPDIR)/$(am__dirstamp)
util/libPOLY_a-time.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)

libPOLY.a: $(libPOLY_a_OBJECTS) $(libPOLY_a_DEPENDENCIES) $(EXTRA_libPOLY_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libPOLY.a
	$(AM_V_AR)$(libPOLY_a_AR) libPOLY.a $(libPOLY_a_OBJECTS) $(libPOLY_a_LIBADD)
	$(AM_V_at)$(RANLIB) libPOLY.a
c_lang/libPOLYmpi_a-CMPIPolylib.$(OBJEXT): c_lang/$(am__dirstamp) \
	c_lang/$(DEPDIR)/$(am__dirstamp)
c_lang/libPOLYmpi_a-CPolylib.$(OBJEXT): c_lang/$(am__dirstamp) \
	c_lang/$(DEPDIR)/$(am__dirstamp)
common/libPOLYmpi_a-BBox.$(OBJEXT): common/$(am__dirstamp) \
	common/$(DEPDIR)/$(am__dirstamp)
file_io/libPOLYmpi_a-stl.$(OBJEXT): file_io/$(am__dirstamp) \
	file_io/$(DEPDIR)/$(am__dirstamp)
file_io/libPOLYmpi_a-obj.$(OBJEXT): file_io/$(am__dirstamp) \
	file_io/$(DEPDIR)/$(am__dirstamp)
file_io/libPOLYmpi_a-vtk.$(OBJEXT): file_io/$(am__dirstamp) \
	file_io/$(DEPDIR)/$(am__dirstamp)
file_io/libPOLYmpi_a-triangle_id.$(OBJEXT): file_io/$(am__dirstamp) \
	file_io/$(DEPDIR)/$(am__dirstamp)
file_io/libPOLYmpi_a-TriMeshIO.$(OBJEXT): file_io/$(am__dirstamp) \
	file_io/$(DEPDIR)/$(am__dirstamp)
groups/libPOLYmpi_a-PolygonGroup.$(OBJEXT): groups/$(am__dirstamp) \
	groups/$(DEPDIR)/$(am__dirstamp)
groups/libPOLYmpi_a-PolygonGroupFactory.$(OBJEXT):  \
	groups/$(am__dirstamp) groups/$(DEPDIR)/$(am__dirstamp)
polygons/libPOLYmpi_a-DVertex.$(OBJEXT): polygons/$(am__dirstamp) \
	polygons/$(DEPDIR)/$(am__dirstamp)
polygons/libPOLYmpi_a-DVertexManager.$(OBJEXT):  \
	polygons/$(am__dirstamp) polygons/$(DEPDIR)/$(am__dirstamp)
polygons/libPOLYmpi_a-DVertexTriangle.$(OBJEXT):  \
	polygons/$(am__dirstamp) polygons/$(DEPDIR)/$(am__dirstamp)
polygons/libPOLYmpi_a-Polygons.$(OBJEXT): polygons/$(am__dirstamp) \
	polygons/$(DEPDIR)/$(am__dirstamp)
polygons/libPOLYmpi_a-PrivateTriangle.$(OBJEXT):  \
	polygons/$(am__dirstamp) polygons/$(DEPDIR)/$(am__dirstamp)
polygons/libPOLYmpi_a-Triangle.$(OBJEXT): polygons/$(am__dirstamp) \
	polygons/$(DEPDIR)/$(am__dirstamp)
polygons/libPOLYmpi_a-TriMesh.$(OBJEXT): polygons/$(am__dirstamp) \
	polygons/$(DEPDIR)/$(am__dirstamp)
polygons/libPOLYmpi_a-VElement.$(OBJEXT): polygons/$(am__dirstamp) \
	polygons/$(DEPDIR)/$(am__dirstamp)
polygons/libPOLYmpi_a-Vertex.$(OBJEXT): polygons/$(am__dirstamp) \
	polygons/$(DEPDIR)/$(am__dirstamp)
polygons/libPOLYmpi_a-VertexList.$(OBJEXT): polygons/$(am__dirstamp) \
	polygons/$(DEPDIR)/$(am__dirstamp)
polygons/libPOLYmpi_a-VertKDT.$(OBJEXT): polygons/$(am__dirstamp) \
	polygons/$(DEPDIR)/$(am__dirstamp)
polygons/libPOLYmpi_a-VertKDTElem.$(OBJEXT): polygons/$(am__dirstamp) \
	polygons/$(DEPDIR)/$(am__dirstamp)
polygons/libPOLYmpi_a-VertKDTNode.$(OBJEXT): polygons/$(am__dirstamp) \
	polygons/$(DEPDIR)/$(am__dirstamp)
polygons/libPOLYmpi_a-VNode.$(OBJEXT): polygons/$(am__dirstamp) \
	polygons/$(DEPDIR)/$(am__dirstamp)
polygons/libPOLYmpi_a-VTree.$(OBJEXT): polygons/$(am__dirstamp) \
	polygons/$(DEPDIR)/$(am__dirstamp)
util/libPOLYmpi_a-time.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)

libPOLYmpi.a: $(libPOLYmpi_a_OBJECTS) $(libPOLYmpi_a_DEPENDENCIES) $(EXTRA_libPOLYmpi_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libPOLYmpi.a
	$(AM_V_AR)$(libPOLYmpi_a_AR) libPOLYmpi.a $(libPOLYmpi_a_OBJECTS) $(libPOLYmpi_a_LIBADD)
	$(AM_V_at)$(RANLIB) libPOLYmpi.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f c_lang/*.$(OBJEXT)
	-rm -f common/*.$(OBJEXT)
	-rm -f file_io/*.$(OBJEXT)
	-rm -f groups/*.$(OBJEXT)
	-rm -f polygons/*.$(OBJEXT)
	-rm -f util/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libPOLY_a-Polylib.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libPOLYmpi_a-MPIPolylib.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libPOLYmpi_a-Polylib.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@c_lang/$(DEPDIR)/libPOLY_a-CPolylib.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@c_lang/$(DEPDIR)/libPOLYmpi_a-CMPIPolylib.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@c_lang/$(DEPDIR)/libPOLYmpi_a-CPolylib.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@common/$(DEPDIR)/libPOLY_a-BBox.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@common/$(DEPDIR)/libPOLYmpi_a-BBox.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@file_io/$(DEPDIR)/libPOLY_a-TriMeshIO.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@file_io/$(DEPDIR)/libPOLY_a-obj.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@file_io/$(DEPDIR)/libPOLY_a-stl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@file_io/$(DEPDIR)/libPOLY_a-triangle_id.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@file_io/$(DEPDIR)/libPOLY_a-vtk.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@file_io/$(DEPDIR)/libPOLYmpi_a-TriMeshIO.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@file_io/$(DEPDIR)/libPOLYmpi_a-obj.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@file_io/$(DEPDIR)/libPOLYmpi_a-stl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@file_io/$(DEPDIR)/libPOLYmpi_a-triangle_id.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@file_io/$(DEPDIR)/libPOLYmpi_a-vtk.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@groups/$(DEPDIR)/libPOLY_a-PolygonGroup.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@groups/$(DEPDIR)/libPOLY_a-PolygonGroupFactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@groups/$(DEPDIR)/libPOLYmpi_a-PolygonGroup.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@groups/$(DEPDIR)/libPOLYmpi_a-PolygonGroupFactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@polygons/$(DEPDIR)/libPOLY_a-DVertex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@polygons/$(DEPDIR)/libPOLY_a-DVertexManager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@polygons/$(DEPDIR)/libPOLY_a-DVertexTriangle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@polygons/$(DEPDIR)/libPOLY_a-Polygons.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@polygons/$(DEPDIR)/libPOLY_a-PrivateTriangle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@polygons/$(DEPDIR)/libPOLY_a-TriMesh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@polygons/$(DEPDIR)/libPOLY_a-Triangle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@polygons/$(DEPDIR)/libPOLY_a-VElement.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@polygons/$(DEPDIR)/libPOLY_a-VNode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@polygons/$(DEPDIR)/libPOLY_a-VTree.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@polygons/$(DEPDIR)/libPOLY_a-VertKDT.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@polygons/$(DEPDIR)/libPOLY_a-VertKDTElem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@polygons/$(DEPDIR)/libPOLY_a-VertKDTNode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@polygons/$(DEPDIR)/libPOLY_a-Vertex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@polygons/$(DEPDIR)/libPOLY_a-VertexList.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@polygons/$(DEPDIR)/libPOLYmpi_a-DVertex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@polygons/$(DEPDIR)/libPOLYmpi_a-DVertexManager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@polygons/$(DEPDIR)/libPOLYmpi_a-DVertexTriangle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@polygons/$(DEPDIR)/libPOLYmpi_a-Polygons.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@polygons/$(DEPDIR)/libPOLYmpi_a-PrivateTriangle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@polygons/$(DEPDIR)/libPOLYmpi_a-TriMesh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@polygons/$(DEPDIR)/libPOLYmpi_a-Triangle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@polygons/$(DEPDIR)/libPOLYmpi_a-VElement.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@polygons/$(DEPDIR)/libPOLYmpi_a-VNode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@polygons/$(DEPDIR)/libPOLYmpi_a-VTree.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@polygons/$(DEPDIR)/libPOLYmpi_a-VertKDT.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@polygons/$(DEPDIR)/libPOLYmpi_a-VertKDTElem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@polygons/$(DEPDIR)/libPOLYmpi_a-VertKDTNode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@polygons/$(DEPDIR)/libPOLYmpi_a-Vertex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@polygons/$(DEPDIR)/libPOLYmpi_a-VertexList.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@util/$(DEPDIR)/libPOLY_a-time.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@util/$(DEPDIR)/libPOLYmpi_a-time.Po@am__quote@

.cxx.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cxx.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

libPOLY_a-Polylib.o: Polylib.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT libPOLY_a-Polylib.o -MD -MP -MF $(DEPDIR)/libPOLY_a-Polylib.Tpo -c -o libPOLY_a-Polylib.o `test -f 'Polylib.cxx' || echo '$(srcdir)/'`Polylib.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libPOLY_a-Polylib.Tpo $(DEPDIR)/libPOLY_a-Polylib.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Polylib.cxx' object='libPOLY_a-Polylib.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o libPOLY_a-Polylib.o `test -f 'Polylib.cxx' || echo '$(srcdir)/'`Polylib.cxx

libPOLY_a-Polylib.obj: Polylib.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT libPOLY_a-Polylib.obj -MD -MP -MF $(DEPDIR)/libPOLY_a-Polylib.Tpo -c -o libPOLY_a-Polylib.obj `if test -f 'Polylib.cxx'; then $(CYGPATH_W) 'Polylib.cxx'; else $(CYGPATH_W) '$(srcdir)/Polylib.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libPOLY_a-Polylib.Tpo $(DEPDIR)/libPOLY_a-Polylib.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Polylib.cxx' object='libPOLY_a-Polylib.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o libPOLY_a-Polylib.obj `if test -f 'Polylib.cxx'; then $(CYGPATH_W) 'Polylib.cxx'; else $(CYGPATH_W) '$(srcdir)/Polylib.cxx'; fi`

c_lang/libPOLY_a-CPolylib.o: c_lang/CPolylib.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT c_lang/libPOLY_a-CPolylib.o -MD -MP -MF c_lang/$(DEPDIR)/libPOLY_a-CPolylib.Tpo -c -o c_lang/libPOLY_a-CPolylib.o `test -f 'c_lang/CPolylib.cxx' || echo '$(srcdir)/'`c_lang/CPolylib.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) c_lang/$(DEPDIR)/libPOLY_a-CPolylib.Tpo c_lang/$(DEPDIR)/libPOLY_a-CPolylib.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='c_lang/CPolylib.cxx' object='c_lang/libPOLY_a-CPolylib.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o c_lang/libPOLY_a-CPolylib.o `test -f 'c_lang/CPolylib.cxx' || echo '$(srcdir)/'`c_lang/CPolylib.cxx

c_lang/libPOLY_a-CPolylib.obj: c_lang/CPolylib.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT c_lang/libPOLY_a-CPolylib.obj -MD -MP -MF c_lang/$(DEPDIR)/libPOLY_a-CPolylib.Tpo -c -o c_lang/libPOLY_a-CPolylib.obj `if test -f 'c_lang/CPolylib.cxx'; then $(CYGPATH_W) 'c_lang/CPolylib.cxx'; else $(CYGPATH_W) '$(srcdir)/c_lang/CPolylib.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) c_lang/$(DEPDIR)/libPOLY_a-CPolylib.Tpo c_lang/$(DEPDIR)/libPOLY_a-CPolylib.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='c_lang/CPolylib.cxx' object='c_lang/libPOLY_a-CPolylib.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o c_lang/libPOLY_a-CPolylib.obj `if test -f 'c_lang/CPolylib.cxx'; then $(CYGPATH_W) 'c_lang/CPolylib.cxx'; else $(CYGPATH_W) '$(srcdir)/c_lang/CPolylib.cxx'; fi`

common/libPOLY_a-BBox.o: common/BBox.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT common/libPOLY_a-BBox.o -MD -MP -MF common/$(DEPDIR)/libPOLY_a-BBox.Tpo -c -o common/libPOLY_a-BBox.o `test -f 'common/BBox.cxx' || echo '$(srcdir)/'`common/BBox.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) common/$(DEPDIR)/libPOLY_a-BBox.Tpo common/$(DEPDIR)/libPOLY_a-BBox.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='common/BBox.cxx' object='common/libPOLY_a-BBox.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o common/libPOLY_a-BBox.o `test -f 'common/BBox.cxx' || echo '$(srcdir)/'`common/BBox.cxx

common/libPOLY_a-BBox.obj: common/BBox.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT common/libPOLY_a-BBox.obj -MD -MP -MF common/$(DEPDIR)/libPOLY_a-BBox.Tpo -c -o common/libPOLY_a-BBox.obj `if test -f 'common/BBox.cxx'; then $(CYGPATH_W) 'common/BBox.cxx'; else $(CYGPATH_W) '$(srcdir)/common/BBox.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) common/$(DEPDIR)/libPOLY_a-BBox.Tpo common/$(DEPDIR)/libPOLY_a-BBox.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='common/BBox.cxx' object='common/libPOLY_a-BBox.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o common/libPOLY_a-BBox.obj `if test -f 'common/BBox.cxx'; then $(CYGPATH_W) 'common/BBox.cxx'; else $(CYGPATH_W) '$(srcdir)/common/BBox.cxx'; fi`

file_io/libPOLY_a-stl.o: file_io/stl.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT file_io/libPOLY_a-stl.o -MD -MP -MF file_io/$(DEPDIR)/libPOLY_a-stl.Tpo -c -o file_io/libPOLY_a-stl.o `test -f 'file_io/stl.cxx' || echo '$(srcdir)/'`file_io/stl.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) file_io/$(DEPDIR)/libPOLY_a-stl.Tpo file_io/$(DEPDIR)/libPOLY_a-stl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='file_io/stl.cxx' object='file_io/libPOLY_a-stl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o file_io/libPOLY_a-stl.o `test -f 'file_io/stl.cxx' || echo '$(srcdir)/'`file_io/stl.cxx

file_io/libPOLY_a-stl.obj: file_io/stl.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT file_io/libPOLY_a-stl.obj -MD -MP -MF file_io/$(DEPDIR)/libPOLY_a-stl.Tpo -c -o file_io/libPOLY_a-stl.obj `if test -f 'file_io/stl.cxx'; then $(CYGPATH_W) 'file_io/stl.cxx'; else $(CYGPATH_W) '$(srcdir)/file_io/stl.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) file_io/$(DEPDIR)/libPOLY_a-stl.Tpo file_io/$(DEPDIR)/libPOLY_a-stl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='file_io/stl.cxx' object='file_io/libPOLY_a-stl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o file_io/libPOLY_a-stl.obj `if test -f 'file_io/stl.cxx'; then $(CYGPATH_W) 'file_io/stl.cxx'; else $(CYGPATH_W) '$(srcdir)/file_io/stl.cxx'; fi`

file_io/libPOLY_a-obj.o: file_io/obj.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT file_io/libPOLY_a-obj.o -MD -MP -MF file_io/$(DEPDIR)/libPOLY_a-obj.Tpo -c -o file_io/libPOLY_a-obj.o `test -f 'file_io/obj.cxx' || echo '$(srcdir)/'`file_io/obj.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) file_io/$(DEPDIR)/libPOLY_a-obj.Tpo file_io/$(DEPDIR)/libPOLY_a-obj.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='file_io/obj.cxx' object='file_io/libPOLY_a-obj.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o file_io/libPOLY_a-obj.o `test -f 'file_io/obj.cxx' || echo '$(srcdir)/'`file_io/obj.cxx

file_io/libPOLY_a-obj.obj: file_io/obj.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT file_io/libPOLY_a-obj.obj -MD -MP -MF file_io/$(DEPDIR)/libPOLY_a-obj.Tpo -c -o file_io/libPOLY_a-obj.obj `if test -f 'file_io/obj.cxx'; then $(CYGPATH_W) 'file_io/obj.cxx'; else $(CYGPATH_W) '$(srcdir)/file_io/obj.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) file_io/$(DEPDIR)/libPOLY_a-obj.Tpo file_io/$(DEPDIR)/libPOLY_a-obj.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='file_io/obj.cxx' object='file_io/libPOLY_a-obj.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o file_io/libPOLY_a-obj.obj `if test -f 'file_io/obj.cxx'; then $(CYGPATH_W) 'file_io/obj.cxx'; else $(CYGPATH_W) '$(srcdir)/file_io/obj.cxx'; fi`

file_io/libPOLY_a-vtk.o: file_io/vtk.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT file_io/libPOLY_a-vtk.o -MD -MP -MF file_io/$(DEPDIR)/libPOLY_a-vtk.Tpo -c -o file_io/libPOLY_a-vtk.o `test -f 'file_io/vtk.cxx' || echo '$(srcdir)/'`file_io/vtk.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) file_io/$(DEPDIR)/libPOLY_a-vtk.Tpo file_io/$(DEPDIR)/libPOLY_a-vtk.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='file_io/vtk.cxx' object='file_io/libPOLY_a-vtk.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o file_io/libPOLY_a-vtk.o `test -f 'file_io/vtk.cxx' || echo '$(srcdir)/'`file_io/vtk.cxx

file_io/libPOLY_a-vtk.obj: file_io/vtk.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT file_io/libPOLY_a-vtk.obj -MD -MP -MF file_io/$(DEPDIR)/libPOLY_a-vtk.Tpo -c -o file_io/libPOLY_a-vtk.obj `if test -f 'file_io/vtk.cxx'; then $(CYGPATH_W) 'file_io/vtk.cxx'; else $(CYGPATH_W) '$(srcdir)/file_io/vtk.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) file_io/$(DEPDIR)/libPOLY_a-vtk.Tpo file_io/$(DEPDIR)/libPOLY_a-vtk.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='file_io/vtk.cxx' object='file_io/libPOLY_a-vtk.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o file_io/libPOLY_a-vtk.obj `if test -f 'file_io/vtk.cxx'; then $(CYGPATH_W) 'file_io/vtk.cxx'; else $(CYGPATH_W) '$(srcdir)/file_io/vtk.cxx'; fi`

file_io/libPOLY_a-triangle_id.o: file_io/triangle_id.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT file_io/libPOLY_a-triangle_id.o -MD -MP -MF file_io/$(DEPDIR)/libPOLY_a-triangle_id.Tpo -c -o file_io/libPOLY_a-triangle_id.o `test -f 'file_io/triangle_id.cxx' || echo '$(srcdir)/'`file_io/triangle_id.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) file_io/$(DEPDIR)/libPOLY_a-triangle_id.Tpo file_io/$(DEPDIR)/libPOLY_a-triangle_id.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='file_io/triangle_id.cxx' object='file_io/libPOLY_a-triangle_id.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o file_io/libPOLY_a-triangle_id.o `test -f 'file_io/triangle_id.cxx' || echo '$(srcdir)/'`file_io/triangle_id.cxx

file_io/libPOLY_a-triangle_id.obj: file_io/triangle_id.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT file_io/libPOLY_a-triangle_id.obj -MD -MP -MF file_io/$(DEPDIR)/libPOLY_a-triangle_id.Tpo -c -o file_io/libPOLY_a-triangle_id.obj `if test -f 'file_io/triangle_id.cxx'; then $(CYGPATH_W) 'file_io/triangle_id.cxx'; else $(CYGPATH_W) '$(srcdir)/file_io/triangle_id.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) file_io/$(DEPDIR)/libPOLY_a-triangle_id.Tpo file_io/$(DEPDIR)/libPOLY_a-triangle_id.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='file_io/triangle_id.cxx' object='file_io/libPOLY_a-triangle_id.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o file_io/libPOLY_a-triangle_id.obj `if test -f 'file_io/triangle_id.cxx'; then $(CYGPATH_W) 'file_io/triangle_id.cxx'; else $(CYGPATH_W) '$(srcdir)/file_io/triangle_id.cxx'; fi`

file_io/libPOLY_a-TriMeshIO.o: file_io/TriMeshIO.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT file_io/libPOLY_a-TriMeshIO.o -MD -MP -MF file_io/$(DEPDIR)/libPOLY_a-TriMeshIO.Tpo -c -o file_io/libPOLY_a-TriMeshIO.o `test -f 'file_io/TriMeshIO.cxx' || echo '$(srcdir)/'`file_io/TriMeshIO.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) file_io/$(DEPDIR)/libPOLY_a-TriMeshIO.Tpo file_io/$(DEPDIR)/libPOLY_a-TriMeshIO.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='file_io/TriMeshIO.cxx' object='file_io/libPOLY_a-TriMeshIO.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o file_io/libPOLY_a-TriMeshIO.o `test -f 'file_io/TriMeshIO.cxx' || echo '$(srcdir)/'`file_io/TriMeshIO.cxx

file_io/libPOLY_a-TriMeshIO.obj: file_io/TriMeshIO.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT file_io/libPOLY_a-TriMeshIO.obj -MD -MP -MF file_io/$(DEPDIR)/libPOLY_a-TriMeshIO.Tpo -c -o file_io/libPOLY_a-TriMeshIO.obj `if test -f 'file_io/TriMeshIO.cxx'; then $(CYGPATH_W) 'file_io/TriMeshIO.cxx'; else $(CYGPATH_W) '$(srcdir)/file_io/TriMeshIO.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) file_io/$(DEPDIR)/libPOLY_a-TriMeshIO.Tpo file_io/$(DEPDIR)/libPOLY_a-TriMeshIO.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='file_io/TriMeshIO.cxx' object='file_io/libPOLY_a-TriMeshIO.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o file_io/libPOLY_a-TriMeshIO.obj `if test -f 'file_io/TriMeshIO.cxx'; then $(CYGPATH_W) 'file_io/TriMeshIO.cxx'; else $(CYGPATH_W) '$(srcdir)/file_io/TriMeshIO.cxx'; fi`

groups/libPOLY_a-PolygonGroup.o: groups/PolygonGroup.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT groups/libPOLY_a-PolygonGroup.o -MD -MP -MF groups/$(DEPDIR)/libPOLY_a-PolygonGroup.Tpo -c -o groups/libPOLY_a-PolygonGroup.o `test -f 'groups/PolygonGroup.cxx' || echo '$(srcdir)/'`groups/PolygonGroup.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) groups/$(DEPDIR)/libPOLY_a-PolygonGroup.Tpo groups/$(DEPDIR)/libPOLY_a-PolygonGroup.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='groups/PolygonGroup.cxx' object='groups/libPOLY_a-PolygonGroup.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o groups/libPOLY_a-PolygonGroup.o `test -f 'groups/PolygonGroup.cxx' || echo '$(srcdir)/'`groups/PolygonGroup.cxx

groups/libPOLY_a-PolygonGroup.obj: groups/PolygonGroup.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT groups/libPOLY_a-PolygonGroup.obj -MD -MP -MF groups/$(DEPDIR)/libPOLY_a-PolygonGroup.Tpo -c -o groups/libPOLY_a-PolygonGroup.obj `if test -f 'groups/PolygonGroup.cxx'; then $(CYGPATH_W) 'groups/PolygonGroup.cxx'; else $(CYGPATH_W) '$(srcdir)/groups/PolygonGroup.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) groups/$(DEPDIR)/libPOLY_a-PolygonGroup.Tpo groups/$(DEPDIR)/libPOLY_a-PolygonGroup.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='groups/PolygonGroup.cxx' object='groups/libPOLY_a-PolygonGroup.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o groups/libPOLY_a-PolygonGroup.obj `if test -f 'groups/PolygonGroup.cxx'; then $(CYGPATH_W) 'groups/PolygonGroup.cxx'; else $(CYGPATH_W) '$(srcdir)/groups/PolygonGroup.cxx'; fi`

groups/libPOLY_a-PolygonGroupFactory.o: groups/PolygonGroupFactory.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT groups/libPOLY_a-PolygonGroupFactory.o -MD -MP -MF groups/$(DEPDIR)/libPOLY_a-PolygonGroupFactory.Tpo -c -o groups/libPOLY_a-PolygonGroupFactory.o `test -f 'groups/PolygonGroupFactory.cxx' || echo '$(srcdir)/'`groups/PolygonGroupFactory.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) groups/$(DEPDIR)/libPOLY_a-PolygonGroupFactory.Tpo groups/$(DEPDIR)/libPOLY_a-PolygonGroupFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='groups/PolygonGroupFactory.cxx' object='groups/libPOLY_a-PolygonGroupFactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o groups/libPOLY_a-PolygonGroupFactory.o `test -f 'groups/PolygonGroupFactory.cxx' || echo '$(srcdir)/'`groups/PolygonGroupFactory.cxx

groups/libPOLY_a-PolygonGroupFactory.obj: groups/PolygonGroupFactory.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT groups/libPOLY_a-PolygonGroupFactory.obj -MD -MP -MF groups/$(DEPDIR)/libPOLY_a-PolygonGroupFactory.Tpo -c -o groups/libPOLY_a-PolygonGroupFactory.obj `if test -f 'groups/PolygonGroupFactory.cxx'; then $(CYGPATH_W) 'groups/PolygonGroupFactory.cxx'; else $(CYGPATH_W) '$(srcdir)/groups/PolygonGroupFactory.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) groups/$(DEPDIR)/libPOLY_a-PolygonGroupFactory.Tpo groups/$(DEPDIR)/libPOLY_a-PolygonGroupFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='groups/PolygonGroupFactory.cxx' object='groups/libPOLY_a-PolygonGroupFactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o groups/libPOLY_a-PolygonGroupFactory.obj `if test -f 'groups/PolygonGroupFactory.cxx'; then $(CYGPATH_W) 'groups/PolygonGroupFactory.cxx'; else $(CYGPATH_W) '$(srcdir)/groups/PolygonGroupFactory.cxx'; fi`

polygons/libPOLY_a-DVertex.o: polygons/DVertex.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLY_a-DVertex.o -MD -MP -MF polygons/$(DEPDIR)/libPOLY_a-DVertex.Tpo -c -o polygons/libPOLY_a-DVertex.o `test -f 'polygons/DVertex.cxx' || echo '$(srcdir)/'`polygons/DVertex.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLY_a-DVertex.Tpo polygons/$(DEPDIR)/libPOLY_a-DVertex.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/DVertex.cxx' object='polygons/libPOLY_a-DVertex.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLY_a-DVertex.o `test -f 'polygons/DVertex.cxx' || echo '$(srcdir)/'`polygons/DVertex.cxx

polygons/libPOLY_a-DVertex.obj: polygons/DVertex.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLY_a-DVertex.obj -MD -MP -MF polygons/$(DEPDIR)/libPOLY_a-DVertex.Tpo -c -o polygons/libPOLY_a-DVertex.obj `if test -f 'polygons/DVertex.cxx'; then $(CYGPATH_W) 'polygons/DVertex.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/DVertex.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLY_a-DVertex.Tpo polygons/$(DEPDIR)/libPOLY_a-DVertex.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/DVertex.cxx' object='polygons/libPOLY_a-DVertex.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLY_a-DVertex.obj `if test -f 'polygons/DVertex.cxx'; then $(CYGPATH_W) 'polygons/DVertex.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/DVertex.cxx'; fi`

polygons/libPOLY_a-DVertexManager.o: polygons/DVertexManager.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLY_a-DVertexManager.o -MD -MP -MF polygons/$(DEPDIR)/libPOLY_a-DVertexManager.Tpo -c -o polygons/libPOLY_a-DVertexManager.o `test -f 'polygons/DVertexManager.cxx' || echo '$(srcdir)/'`polygons/DVertexManager.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLY_a-DVertexManager.Tpo polygons/$(DEPDIR)/libPOLY_a-DVertexManager.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/DVertexManager.cxx' object='polygons/libPOLY_a-DVertexManager.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLY_a-DVertexManager.o `test -f 'polygons/DVertexManager.cxx' || echo '$(srcdir)/'`polygons/DVertexManager.cxx

polygons/libPOLY_a-DVertexManager.obj: polygons/DVertexManager.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLY_a-DVertexManager.obj -MD -MP -MF polygons/$(DEPDIR)/libPOLY_a-DVertexManager.Tpo -c -o polygons/libPOLY_a-DVertexManager.obj `if test -f 'polygons/DVertexManager.cxx'; then $(CYGPATH_W) 'polygons/DVertexManager.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/DVertexManager.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLY_a-DVertexManager.Tpo polygons/$(DEPDIR)/libPOLY_a-DVertexManager.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/DVertexManager.cxx' object='polygons/libPOLY_a-DVertexManager.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLY_a-DVertexManager.obj `if test -f 'polygons/DVertexManager.cxx'; then $(CYGPATH_W) 'polygons/DVertexManager.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/DVertexManager.cxx'; fi`

polygons/libPOLY_a-DVertexTriangle.o: polygons/DVertexTriangle.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLY_a-DVertexTriangle.o -MD -MP -MF polygons/$(DEPDIR)/libPOLY_a-DVertexTriangle.Tpo -c -o polygons/libPOLY_a-DVertexTriangle.o `test -f 'polygons/DVertexTriangle.cxx' || echo '$(srcdir)/'`polygons/DVertexTriangle.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLY_a-DVertexTriangle.Tpo polygons/$(DEPDIR)/libPOLY_a-DVertexTriangle.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/DVertexTriangle.cxx' object='polygons/libPOLY_a-DVertexTriangle.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLY_a-DVertexTriangle.o `test -f 'polygons/DVertexTriangle.cxx' || echo '$(srcdir)/'`polygons/DVertexTriangle.cxx

polygons/libPOLY_a-DVertexTriangle.obj: polygons/DVertexTriangle.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLY_a-DVertexTriangle.obj -MD -MP -MF polygons/$(DEPDIR)/libPOLY_a-DVertexTriangle.Tpo -c -o polygons/libPOLY_a-DVertexTriangle.obj `if test -f 'polygons/DVertexTriangle.cxx'; then $(CYGPATH_W) 'polygons/DVertexTriangle.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/DVertexTriangle.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLY_a-DVertexTriangle.Tpo polygons/$(DEPDIR)/libPOLY_a-DVertexTriangle.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/DVertexTriangle.cxx' object='polygons/libPOLY_a-DVertexTriangle.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLY_a-DVertexTriangle.obj `if test -f 'polygons/DVertexTriangle.cxx'; then $(CYGPATH_W) 'polygons/DVertexTriangle.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/DVertexTriangle.cxx'; fi`

polygons/libPOLY_a-Polygons.o: polygons/Polygons.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLY_a-Polygons.o -MD -MP -MF polygons/$(DEPDIR)/libPOLY_a-Polygons.Tpo -c -o polygons/libPOLY_a-Polygons.o `test -f 'polygons/Polygons.cxx' || echo '$(srcdir)/'`polygons/Polygons.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLY_a-Polygons.Tpo polygons/$(DEPDIR)/libPOLY_a-Polygons.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/Polygons.cxx' object='polygons/libPOLY_a-Polygons.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLY_a-Polygons.o `test -f 'polygons/Polygons.cxx' || echo '$(srcdir)/'`polygons/Polygons.cxx

polygons/libPOLY_a-Polygons.obj: polygons/Polygons.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLY_a-Polygons.obj -MD -MP -MF polygons/$(DEPDIR)/libPOLY_a-Polygons.Tpo -c -o polygons/libPOLY_a-Polygons.obj `if test -f 'polygons/Polygons.cxx'; then $(CYGPATH_W) 'polygons/Polygons.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/Polygons.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLY_a-Polygons.Tpo polygons/$(DEPDIR)/libPOLY_a-Polygons.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/Polygons.cxx' object='polygons/libPOLY_a-Polygons.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLY_a-Polygons.obj `if test -f 'polygons/Polygons.cxx'; then $(CYGPATH_W) 'polygons/Polygons.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/Polygons.cxx'; fi`

polygons/libPOLY_a-PrivateTriangle.o: polygons/PrivateTriangle.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLY_a-PrivateTriangle.o -MD -MP -MF polygons/$(DEPDIR)/libPOLY_a-PrivateTriangle.Tpo -c -o polygons/libPOLY_a-PrivateTriangle.o `test -f 'polygons/PrivateTriangle.cxx' || echo '$(srcdir)/'`polygons/PrivateTriangle.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLY_a-PrivateTriangle.Tpo polygons/$(DEPDIR)/libPOLY_a-PrivateTriangle.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/PrivateTriangle.cxx' object='polygons/libPOLY_a-PrivateTriangle.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLY_a-PrivateTriangle.o `test -f 'polygons/PrivateTriangle.cxx' || echo '$(srcdir)/'`polygons/PrivateTriangle.cxx

polygons/libPOLY_a-PrivateTriangle.obj: polygons/PrivateTriangle.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLY_a-PrivateTriangle.obj -MD -MP -MF polygons/$(DEPDIR)/libPOLY_a-PrivateTriangle.Tpo -c -o polygons/libPOLY_a-PrivateTriangle.obj `if test -f 'polygons/PrivateTriangle.cxx'; then $(CYGPATH_W) 'polygons/PrivateTriangle.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/PrivateTriangle.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLY_a-PrivateTriangle.Tpo polygons/$(DEPDIR)/libPOLY_a-PrivateTriangle.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/PrivateTriangle.cxx' object='polygons/libPOLY_a-PrivateTriangle.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLY_a-PrivateTriangle.obj `if test -f 'polygons/PrivateTriangle.cxx'; then $(CYGPATH_W) 'polygons/PrivateTriangle.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/PrivateTriangle.cxx'; fi`

polygons/libPOLY_a-Triangle.o: polygons/Triangle.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLY_a-Triangle.o -MD -MP -MF polygons/$(DEPDIR)/libPOLY_a-Triangle.Tpo -c -o polygons/libPOLY_a-Triangle.o `test -f 'polygons/Triangle.cxx' || echo '$(srcdir)/'`polygons/Triangle.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLY_a-Triangle.Tpo polygons/$(DEPDIR)/libPOLY_a-Triangle.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/Triangle.cxx' object='polygons/libPOLY_a-Triangle.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLY_a-Triangle.o `test -f 'polygons/Triangle.cxx' || echo '$(srcdir)/'`polygons/Triangle.cxx

polygons/libPOLY_a-Triangle.obj: polygons/Triangle.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLY_a-Triangle.obj -MD -MP -MF polygons/$(DEPDIR)/libPOLY_a-Triangle.Tpo -c -o polygons/libPOLY_a-Triangle.obj `if test -f 'polygons/Triangle.cxx'; then $(CYGPATH_W) 'polygons/Triangle.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/Triangle.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLY_a-Triangle.Tpo polygons/$(DEPDIR)/libPOLY_a-Triangle.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/Triangle.cxx' object='polygons/libPOLY_a-Triangle.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLY_a-Triangle.obj `if test -f 'polygons/Triangle.cxx'; then $(CYGPATH_W) 'polygons/Triangle.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/Triangle.cxx'; fi`

polygons/libPOLY_a-TriMesh.o: polygons/TriMesh.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLY_a-TriMesh.o -MD -MP -MF polygons/$(DEPDIR)/libPOLY_a-TriMesh.Tpo -c -o polygons/libPOLY_a-TriMesh.o `test -f 'polygons/TriMesh.cxx' || echo '$(srcdir)/'`polygons/TriMesh.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLY_a-TriMesh.Tpo polygons/$(DEPDIR)/libPOLY_a-TriMesh.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/TriMesh.cxx' object='polygons/libPOLY_a-TriMesh.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLY_a-TriMesh.o `test -f 'polygons/TriMesh.cxx' || echo '$(srcdir)/'`polygons/TriMesh.cxx

polygons/libPOLY_a-TriMesh.obj: polygons/TriMesh.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLY_a-TriMesh.obj -MD -MP -MF polygons/$(DEPDIR)/libPOLY_a-TriMesh.Tpo -c -o polygons/libPOLY_a-TriMesh.obj `if test -f 'polygons/TriMesh.cxx'; then $(CYGPATH_W) 'polygons/TriMesh.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/TriMesh.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLY_a-TriMesh.Tpo polygons/$(DEPDIR)/libPOLY_a-TriMesh.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/TriMesh.cxx' object='polygons/libPOLY_a-TriMesh.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLY_a-TriMesh.obj `if test -f 'polygons/TriMesh.cxx'; then $(CYGPATH_W) 'polygons/TriMesh.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/TriMesh.cxx'; fi`

polygons/libPOLY_a-VElement.o: polygons/VElement.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLY_a-VElement.o -MD -MP -MF polygons/$(DEPDIR)/libPOLY_a-VElement.Tpo -c -o polygons/libPOLY_a-VElement.o `test -f 'polygons/VElement.cxx' || echo '$(srcdir)/'`polygons/VElement.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLY_a-VElement.Tpo polygons/$(DEPDIR)/libPOLY_a-VElement.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/VElement.cxx' object='polygons/libPOLY_a-VElement.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLY_a-VElement.o `test -f 'polygons/VElement.cxx' || echo '$(srcdir)/'`polygons/VElement.cxx

polygons/libPOLY_a-VElement.obj: polygons/VElement.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLY_a-VElement.obj -MD -MP -MF polygons/$(DEPDIR)/libPOLY_a-VElement.Tpo -c -o polygons/libPOLY_a-VElement.obj `if test -f 'polygons/VElement.cxx'; then $(CYGPATH_W) 'polygons/VElement.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/VElement.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLY_a-VElement.Tpo polygons/$(DEPDIR)/libPOLY_a-VElement.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/VElement.cxx' object='polygons/libPOLY_a-VElement.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLY_a-VElement.obj `if test -f 'polygons/VElement.cxx'; then $(CYGPATH_W) 'polygons/VElement.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/VElement.cxx'; fi`

polygons/libPOLY_a-Vertex.o: polygons/Vertex.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLY_a-Vertex.o -MD -MP -MF polygons/$(DEPDIR)/libPOLY_a-Vertex.Tpo -c -o polygons/libPOLY_a-Vertex.o `test -f 'polygons/Vertex.cxx' || echo '$(srcdir)/'`polygons/Vertex.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLY_a-Vertex.Tpo polygons/$(DEPDIR)/libPOLY_a-Vertex.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/Vertex.cxx' object='polygons/libPOLY_a-Vertex.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLY_a-Vertex.o `test -f 'polygons/Vertex.cxx' || echo '$(srcdir)/'`polygons/Vertex.cxx

polygons/libPOLY_a-Vertex.obj: polygons/Vertex.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLY_a-Vertex.obj -MD -MP -MF polygons/$(DEPDIR)/libPOLY_a-Vertex.Tpo -c -o polygons/libPOLY_a-Vertex.obj `if test -f 'polygons/Vertex.cxx'; then $(CYGPATH_W) 'polygons/Vertex.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/Vertex.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLY_a-Vertex.Tpo polygons/$(DEPDIR)/libPOLY_a-Vertex.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/Vertex.cxx' object='polygons/libPOLY_a-Vertex.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLY_a-Vertex.obj `if test -f 'polygons/Vertex.cxx'; then $(CYGPATH_W) 'polygons/Vertex.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/Vertex.cxx'; fi`

polygons/libPOLY_a-VertexList.o: polygons/VertexList.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLY_a-VertexList.o -MD -MP -MF polygons/$(DEPDIR)/libPOLY_a-VertexList.Tpo -c -o polygons/libPOLY_a-VertexList.o `test -f 'polygons/VertexList.cxx' || echo '$(srcdir)/'`polygons/VertexList.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLY_a-VertexList.Tpo polygons/$(DEPDIR)/libPOLY_a-VertexList.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/VertexList.cxx' object='polygons/libPOLY_a-VertexList.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLY_a-VertexList.o `test -f 'polygons/VertexList.cxx' || echo '$(srcdir)/'`polygons/VertexList.cxx

polygons/libPOLY_a-VertexList.obj: polygons/VertexList.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLY_a-VertexList.obj -MD -MP -MF polygons/$(DEPDIR)/libPOLY_a-VertexList.Tpo -c -o polygons/libPOLY_a-VertexList.obj `if test -f 'polygons/VertexList.cxx'; then $(CYGPATH_W) 'polygons/VertexList.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/VertexList.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLY_a-VertexList.Tpo polygons/$(DEPDIR)/libPOLY_a-VertexList.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/VertexList.cxx' object='polygons/libPOLY_a-VertexList.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLY_a-VertexList.obj `if test -f 'polygons/VertexList.cxx'; then $(CYGPATH_W) 'polygons/VertexList.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/VertexList.cxx'; fi`

polygons/libPOLY_a-VertKDT.o: polygons/VertKDT.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLY_a-VertKDT.o -MD -MP -MF polygons/$(DEPDIR)/libPOLY_a-VertKDT.Tpo -c -o polygons/libPOLY_a-VertKDT.o `test -f 'polygons/VertKDT.cxx' || echo '$(srcdir)/'`polygons/VertKDT.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLY_a-VertKDT.Tpo polygons/$(DEPDIR)/libPOLY_a-VertKDT.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/VertKDT.cxx' object='polygons/libPOLY_a-VertKDT.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLY_a-VertKDT.o `test -f 'polygons/VertKDT.cxx' || echo '$(srcdir)/'`polygons/VertKDT.cxx

polygons/libPOLY_a-VertKDT.obj: polygons/VertKDT.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLY_a-VertKDT.obj -MD -MP -MF polygons/$(DEPDIR)/libPOLY_a-VertKDT.Tpo -c -o polygons/libPOLY_a-VertKDT.obj `if test -f 'polygons/VertKDT.cxx'; then $(CYGPATH_W) 'polygons/VertKDT.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/VertKDT.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLY_a-VertKDT.Tpo polygons/$(DEPDIR)/libPOLY_a-VertKDT.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/VertKDT.cxx' object='polygons/libPOLY_a-VertKDT.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLY_a-VertKDT.obj `if test -f 'polygons/VertKDT.cxx'; then $(CYGPATH_W) 'polygons/VertKDT.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/VertKDT.cxx'; fi`

polygons/libPOLY_a-VertKDTElem.o: polygons/VertKDTElem.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLY_a-VertKDTElem.o -MD -MP -MF polygons/$(DEPDIR)/libPOLY_a-VertKDTElem.Tpo -c -o polygons/libPOLY_a-VertKDTElem.o `test -f 'polygons/VertKDTElem.cxx' || echo '$(srcdir)/'`polygons/VertKDTElem.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLY_a-VertKDTElem.Tpo polygons/$(DEPDIR)/libPOLY_a-VertKDTElem.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/VertKDTElem.cxx' object='polygons/libPOLY_a-VertKDTElem.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLY_a-VertKDTElem.o `test -f 'polygons/VertKDTElem.cxx' || echo '$(srcdir)/'`polygons/VertKDTElem.cxx

polygons/libPOLY_a-VertKDTElem.obj: polygons/VertKDTElem.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLY_a-VertKDTElem.obj -MD -MP -MF polygons/$(DEPDIR)/libPOLY_a-VertKDTElem.Tpo -c -o polygons/libPOLY_a-VertKDTElem.obj `if test -f 'polygons/VertKDTElem.cxx'; then $(CYGPATH_W) 'polygons/VertKDTElem.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/VertKDTElem.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLY_a-VertKDTElem.Tpo polygons/$(DEPDIR)/libPOLY_a-VertKDTElem.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/VertKDTElem.cxx' object='polygons/libPOLY_a-VertKDTElem.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLY_a-VertKDTElem.obj `if test -f 'polygons/VertKDTElem.cxx'; then $(CYGPATH_W) 'polygons/VertKDTElem.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/VertKDTElem.cxx'; fi`

polygons/libPOLY_a-VertKDTNode.o: polygons/VertKDTNode.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLY_a-VertKDTNode.o -MD -MP -MF polygons/$(DEPDIR)/libPOLY_a-VertKDTNode.Tpo -c -o polygons/libPOLY_a-VertKDTNode.o `test -f 'polygons/VertKDTNode.cxx' || echo '$(srcdir)/'`polygons/VertKDTNode.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLY_a-VertKDTNode.Tpo polygons/$(DEPDIR)/libPOLY_a-VertKDTNode.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/VertKDTNode.cxx' object='polygons/libPOLY_a-VertKDTNode.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLY_a-VertKDTNode.o `test -f 'polygons/VertKDTNode.cxx' || echo '$(srcdir)/'`polygons/VertKDTNode.cxx

polygons/libPOLY_a-VertKDTNode.obj: polygons/VertKDTNode.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLY_a-VertKDTNode.obj -MD -MP -MF polygons/$(DEPDIR)/libPOLY_a-VertKDTNode.Tpo -c -o polygons/libPOLY_a-VertKDTNode.obj `if test -f 'polygons/VertKDTNode.cxx'; then $(CYGPATH_W) 'polygons/VertKDTNode.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/VertKDTNode.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLY_a-VertKDTNode.Tpo polygons/$(DEPDIR)/libPOLY_a-VertKDTNode.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/VertKDTNode.cxx' object='polygons/libPOLY_a-VertKDTNode.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLY_a-VertKDTNode.obj `if test -f 'polygons/VertKDTNode.cxx'; then $(CYGPATH_W) 'polygons/VertKDTNode.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/VertKDTNode.cxx'; fi`

polygons/libPOLY_a-VNode.o: polygons/VNode.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLY_a-VNode.o -MD -MP -MF polygons/$(DEPDIR)/libPOLY_a-VNode.Tpo -c -o polygons/libPOLY_a-VNode.o `test -f 'polygons/VNode.cxx' || echo '$(srcdir)/'`polygons/VNode.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLY_a-VNode.Tpo polygons/$(DEPDIR)/libPOLY_a-VNode.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/VNode.cxx' object='polygons/libPOLY_a-VNode.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLY_a-VNode.o `test -f 'polygons/VNode.cxx' || echo '$(srcdir)/'`polygons/VNode.cxx

polygons/libPOLY_a-VNode.obj: polygons/VNode.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLY_a-VNode.obj -MD -MP -MF polygons/$(DEPDIR)/libPOLY_a-VNode.Tpo -c -o polygons/libPOLY_a-VNode.obj `if test -f 'polygons/VNode.cxx'; then $(CYGPATH_W) 'polygons/VNode.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/VNode.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLY_a-VNode.Tpo polygons/$(DEPDIR)/libPOLY_a-VNode.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/VNode.cxx' object='polygons/libPOLY_a-VNode.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLY_a-VNode.obj `if test -f 'polygons/VNode.cxx'; then $(CYGPATH_W) 'polygons/VNode.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/VNode.cxx'; fi`

polygons/libPOLY_a-VTree.o: polygons/VTree.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLY_a-VTree.o -MD -MP -MF polygons/$(DEPDIR)/libPOLY_a-VTree.Tpo -c -o polygons/libPOLY_a-VTree.o `test -f 'polygons/VTree.cxx' || echo '$(srcdir)/'`polygons/VTree.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLY_a-VTree.Tpo polygons/$(DEPDIR)/libPOLY_a-VTree.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/VTree.cxx' object='polygons/libPOLY_a-VTree.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLY_a-VTree.o `test -f 'polygons/VTree.cxx' || echo '$(srcdir)/'`polygons/VTree.cxx

polygons/libPOLY_a-VTree.obj: polygons/VTree.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLY_a-VTree.obj -MD -MP -MF polygons/$(DEPDIR)/libPOLY_a-VTree.Tpo -c -o polygons/libPOLY_a-VTree.obj `if test -f 'polygons/VTree.cxx'; then $(CYGPATH_W) 'polygons/VTree.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/VTree.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLY_a-VTree.Tpo polygons/$(DEPDIR)/libPOLY_a-VTree.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/VTree.cxx' object='polygons/libPOLY_a-VTree.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLY_a-VTree.obj `if test -f 'polygons/VTree.cxx'; then $(CYGPATH_W) 'polygons/VTree.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/VTree.cxx'; fi`

util/libPOLY_a-time.o: util/time.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT util/libPOLY_a-time.o -MD -MP -MF util/$(DEPDIR)/libPOLY_a-time.Tpo -c -o util/libPOLY_a-time.o `test -f 'util/time.cxx' || echo '$(srcdir)/'`util/time.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libPOLY_a-time.Tpo util/$(DEPDIR)/libPOLY_a-time.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='util/time.cxx' object='util/libPOLY_a-time.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libPOLY_a-time.o `test -f 'util/time.cxx' || echo '$(srcdir)/'`util/time.cxx

util/libPOLY_a-time.obj: util/time.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -MT util/libPOLY_a-time.obj -MD -MP -MF util/$(DEPDIR)/libPOLY_a-time.Tpo -c -o util/libPOLY_a-time.obj `if test -f 'util/time.cxx'; then $(CYGPATH_W) 'util/time.cxx'; else $(CYGPATH_W) '$(srcdir)/util/time.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libPOLY_a-time.Tpo util/$(DEPDIR)/libPOLY_a-time.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='util/time.cxx' object='util/libPOLY_a-time.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLY_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libPOLY_a-time.obj `if test -f 'util/time.cxx'; then $(CYGPATH_W) 'util/time.cxx'; else $(CYGPATH_W) '$(srcdir)/util/time.cxx'; fi`

libPOLYmpi_a-MPIPolylib.o: MPIPolylib.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT libPOLYmpi_a-MPIPolylib.o -MD -MP -MF $(DEPDIR)/libPOLYmpi_a-MPIPolylib.Tpo -c -o libPOLYmpi_a-MPIPolylib.o `test -f 'MPIPolylib.cxx' || echo '$(srcdir)/'`MPIPolylib.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libPOLYmpi_a-MPIPolylib.Tpo $(DEPDIR)/libPOLYmpi_a-MPIPolylib.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='MPIPolylib.cxx' object='libPOLYmpi_a-MPIPolylib.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o libPOLYmpi_a-MPIPolylib.o `test -f 'MPIPolylib.cxx' || echo '$(srcdir)/'`MPIPolylib.cxx

libPOLYmpi_a-MPIPolylib.obj: MPIPolylib.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT libPOLYmpi_a-MPIPolylib.obj -MD -MP -MF $(DEPDIR)/libPOLYmpi_a-MPIPolylib.Tpo -c -o libPOLYmpi_a-MPIPolylib.obj `if test -f 'MPIPolylib.cxx'; then $(CYGPATH_W) 'MPIPolylib.cxx'; else $(CYGPATH_W) '$(srcdir)/MPIPolylib.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libPOLYmpi_a-MPIPolylib.Tpo $(DEPDIR)/libPOLYmpi_a-MPIPolylib.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='MPIPolylib.cxx' object='libPOLYmpi_a-MPIPolylib.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o libPOLYmpi_a-MPIPolylib.obj `if test -f 'MPIPolylib.cxx'; then $(CYGPATH_W) 'MPIPolylib.cxx'; else $(CYGPATH_W) '$(srcdir)/MPIPolylib.cxx'; fi`

libPOLYmpi_a-Polylib.o: Polylib.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT libPOLYmpi_a-Polylib.o -MD -MP -MF $(DEPDIR)/libPOLYmpi_a-Polylib.Tpo -c -o libPOLYmpi_a-Polylib.o `test -f 'Polylib.cxx' || echo '$(srcdir)/'`Polylib.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libPOLYmpi_a-Polylib.Tpo $(DEPDIR)/libPOLYmpi_a-Polylib.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Polylib.cxx' object='libPOLYmpi_a-Polylib.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o libPOLYmpi_a-Polylib.o `test -f 'Polylib.cxx' || echo '$(srcdir)/'`Polylib.cxx

libPOLYmpi_a-Polylib.obj: Polylib.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT libPOLYmpi_a-Polylib.obj -MD -MP -MF $(DEPDIR)/libPOLYmpi_a-Polylib.Tpo -c -o libPOLYmpi_a-Polylib.obj `if test -f 'Polylib.cxx'; then $(CYGPATH_W) 'Polylib.cxx'; else $(CYGPATH_W) '$(srcdir)/Polylib.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libPOLYmpi_a-Polylib.Tpo $(DEPDIR)/libPOLYmpi_a-Polylib.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Polylib.cxx' object='libPOLYmpi_a-Polylib.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o libPOLYmpi_a-Polylib.obj `if test -f 'Polylib.cxx'; then $(CYGPATH_W) 'Polylib.cxx'; else $(CYGPATH_W) '$(srcdir)/Polylib.cxx'; fi`

c_lang/libPOLYmpi_a-CMPIPolylib.o: c_lang/CMPIPolylib.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT c_lang/libPOLYmpi_a-CMPIPolylib.o -MD -MP -MF c_lang/$(DEPDIR)/libPOLYmpi_a-CMPIPolylib.Tpo -c -o c_lang/libPOLYmpi_a-CMPIPolylib.o `test -f 'c_lang/CMPIPolylib.cxx' || echo '$(srcdir)/'`c_lang/CMPIPolylib.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) c_lang/$(DEPDIR)/libPOLYmpi_a-CMPIPolylib.Tpo c_lang/$(DEPDIR)/libPOLYmpi_a-CMPIPolylib.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='c_lang/CMPIPolylib.cxx' object='c_lang/libPOLYmpi_a-CMPIPolylib.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o c_lang/libPOLYmpi_a-CMPIPolylib.o `test -f 'c_lang/CMPIPolylib.cxx' || echo '$(srcdir)/'`c_lang/CMPIPolylib.cxx

c_lang/libPOLYmpi_a-CMPIPolylib.obj: c_lang/CMPIPolylib.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT c_lang/libPOLYmpi_a-CMPIPolylib.obj -MD -MP -MF c_lang/$(DEPDIR)/libPOLYmpi_a-CMPIPolylib.Tpo -c -o c_lang/libPOLYmpi_a-CMPIPolylib.obj `if test -f 'c_lang/CMPIPolylib.cxx'; then $(CYGPATH_W) 'c_lang/CMPIPolylib.cxx'; else $(CYGPATH_W) '$(srcdir)/c_lang/CMPIPolylib.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) c_lang/$(DEPDIR)/libPOLYmpi_a-CMPIPolylib.Tpo c_lang/$(DEPDIR)/libPOLYmpi_a-CMPIPolylib.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='c_lang/CMPIPolylib.cxx' object='c_lang/libPOLYmpi_a-CMPIPolylib.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o c_lang/libPOLYmpi_a-CMPIPolylib.obj `if test -f 'c_lang/CMPIPolylib.cxx'; then $(CYGPATH_W) 'c_lang/CMPIPolylib.cxx'; else $(CYGPATH_W) '$(srcdir)/c_lang/CMPIPolylib.cxx'; fi`

c_lang/libPOLYmpi_a-CPolylib.o: c_lang/CPolylib.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT c_lang/libPOLYmpi_a-CPolylib.o -MD -MP -MF c_lang/$(DEPDIR)/libPOLYmpi_a-CPolylib.Tpo -c -o c_lang/libPOLYmpi_a-CPolylib.o `test -f 'c_lang/CPolylib.cxx' || echo '$(srcdir)/'`c_lang/CPolylib.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) c_lang/$(DEPDIR)/libPOLYmpi_a-CPolylib.Tpo c_lang/$(DEPDIR)/libPOLYmpi_a-CPolylib.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='c_lang/CPolylib.cxx' object='c_lang/libPOLYmpi_a-CPolylib.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o c_lang/libPOLYmpi_a-CPolylib.o `test -f 'c_lang/CPolylib.cxx' || echo '$(srcdir)/'`c_lang/CPolylib.cxx

c_lang/libPOLYmpi_a-CPolylib.obj: c_lang/CPolylib.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT c_lang/libPOLYmpi_a-CPolylib.obj -MD -MP -MF c_lang/$(DEPDIR)/libPOLYmpi_a-CPolylib.Tpo -c -o c_lang/libPOLYmpi_a-CPolylib.obj `if test -f 'c_lang/CPolylib.cxx'; then $(CYGPATH_W) 'c_lang/CPolylib.cxx'; else $(CYGPATH_W) '$(srcdir)/c_lang/CPolylib.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) c_lang/$(DEPDIR)/libPOLYmpi_a-CPolylib.Tpo c_lang/$(DEPDIR)/libPOLYmpi_a-CPolylib.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='c_lang/CPolylib.cxx' object='c_lang/libPOLYmpi_a-CPolylib.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o c_lang/libPOLYmpi_a-CPolylib.obj `if test -f 'c_lang/CPolylib.cxx'; then $(CYGPATH_W) 'c_lang/CPolylib.cxx'; else $(CYGPATH_W) '$(srcdir)/c_lang/CPolylib.cxx'; fi`

common/libPOLYmpi_a-BBox.o: common/BBox.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT common/libPOLYmpi_a-BBox.o -MD -MP -MF common/$(DEPDIR)/libPOLYmpi_a-BBox.Tpo -c -o common/libPOLYmpi_a-BBox.o `test -f 'common/BBox.cxx' || echo '$(srcdir)/'`common/BBox.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) common/$(DEPDIR)/libPOLYmpi_a-BBox.Tpo common/$(DEPDIR)/libPOLYmpi_a-BBox.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='common/BBox.cxx' object='common/libPOLYmpi_a-BBox.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o common/libPOLYmpi_a-BBox.o `test -f 'common/BBox.cxx' || echo '$(srcdir)/'`common/BBox.cxx

common/libPOLYmpi_a-BBox.obj: common/BBox.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT common/libPOLYmpi_a-BBox.obj -MD -MP -MF common/$(DEPDIR)/libPOLYmpi_a-BBox.Tpo -c -o common/libPOLYmpi_a-BBox.obj `if test -f 'common/BBox.cxx'; then $(CYGPATH_W) 'common/BBox.cxx'; else $(CYGPATH_W) '$(srcdir)/common/BBox.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) common/$(DEPDIR)/libPOLYmpi_a-BBox.Tpo common/$(DEPDIR)/libPOLYmpi_a-BBox.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='common/BBox.cxx' object='common/libPOLYmpi_a-BBox.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o common/libPOLYmpi_a-BBox.obj `if test -f 'common/BBox.cxx'; then $(CYGPATH_W) 'common/BBox.cxx'; else $(CYGPATH_W) '$(srcdir)/common/BBox.cxx'; fi`

file_io/libPOLYmpi_a-stl.o: file_io/stl.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT file_io/libPOLYmpi_a-stl.o -MD -MP -MF file_io/$(DEPDIR)/libPOLYmpi_a-stl.Tpo -c -o file_io/libPOLYmpi_a-stl.o `test -f 'file_io/stl.cxx' || echo '$(srcdir)/'`file_io/stl.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) file_io/$(DEPDIR)/libPOLYmpi_a-stl.Tpo file_io/$(DEPDIR)/libPOLYmpi_a-stl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='file_io/stl.cxx' object='file_io/libPOLYmpi_a-stl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o file_io/libPOLYmpi_a-stl.o `test -f 'file_io/stl.cxx' || echo '$(srcdir)/'`file_io/stl.cxx

file_io/libPOLYmpi_a-stl.obj: file_io/stl.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT file_io/libPOLYmpi_a-stl.obj -MD -MP -MF file_io/$(DEPDIR)/libPOLYmpi_a-stl.Tpo -c -o file_io/libPOLYmpi_a-stl.obj `if test -f 'file_io/stl.cxx'; then $(CYGPATH_W) 'file_io/stl.cxx'; else $(CYGPATH_W) '$(srcdir)/file_io/stl.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) file_io/$(DEPDIR)/libPOLYmpi_a-stl.Tpo file_io/$(DEPDIR)/libPOLYmpi_a-stl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='file_io/stl.cxx' object='file_io/libPOLYmpi_a-stl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o file_io/libPOLYmpi_a-stl.obj `if test -f 'file_io/stl.cxx'; then $(CYGPATH_W) 'file_io/stl.cxx'; else $(CYGPATH_W) '$(srcdir)/file_io/stl.cxx'; fi`

file_io/libPOLYmpi_a-obj.o: file_io/obj.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT file_io/libPOLYmpi_a-obj.o -MD -MP -MF file_io/$(DEPDIR)/libPOLYmpi_a-obj.Tpo -c -o file_io/libPOLYmpi_a-obj.o `test -f 'file_io/obj.cxx' || echo '$(srcdir)/'`file_io/obj.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) file_io/$(DEPDIR)/libPOLYmpi_a-obj.Tpo file_io/$(DEPDIR)/libPOLYmpi_a-obj.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='file_io/obj.cxx' object='file_io/libPOLYmpi_a-obj.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o file_io/libPOLYmpi_a-obj.o `test -f 'file_io/obj.cxx' || echo '$(srcdir)/'`file_io/obj.cxx

file_io/libPOLYmpi_a-obj.obj: file_io/obj.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT file_io/libPOLYmpi_a-obj.obj -MD -MP -MF file_io/$(DEPDIR)/libPOLYmpi_a-obj.Tpo -c -o file_io/libPOLYmpi_a-obj.obj `if test -f 'file_io/obj.cxx'; then $(CYGPATH_W) 'file_io/obj.cxx'; else $(CYGPATH_W) '$(srcdir)/file_io/obj.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) file_io/$(DEPDIR)/libPOLYmpi_a-obj.Tpo file_io/$(DEPDIR)/libPOLYmpi_a-obj.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='file_io/obj.cxx' object='file_io/libPOLYmpi_a-obj.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o file_io/libPOLYmpi_a-obj.obj `if test -f 'file_io/obj.cxx'; then $(CYGPATH_W) 'file_io/obj.cxx'; else $(CYGPATH_W) '$(srcdir)/file_io/obj.cxx'; fi`

file_io/libPOLYmpi_a-vtk.o: file_io/vtk.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT file_io/libPOLYmpi_a-vtk.o -MD -MP -MF file_io/$(DEPDIR)/libPOLYmpi_a-vtk.Tpo -c -o file_io/libPOLYmpi_a-vtk.o `test -f 'file_io/vtk.cxx' || echo '$(srcdir)/'`file_io/vtk.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) file_io/$(DEPDIR)/libPOLYmpi_a-vtk.Tpo file_io/$(DEPDIR)/libPOLYmpi_a-vtk.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='file_io/vtk.cxx' object='file_io/libPOLYmpi_a-vtk.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o file_io/libPOLYmpi_a-vtk.o `test -f 'file_io/vtk.cxx' || echo '$(srcdir)/'`file_io/vtk.cxx

file_io/libPOLYmpi_a-vtk.obj: file_io/vtk.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT file_io/libPOLYmpi_a-vtk.obj -MD -MP -MF file_io/$(DEPDIR)/libPOLYmpi_a-vtk.Tpo -c -o file_io/libPOLYmpi_a-vtk.obj `if test -f 'file_io/vtk.cxx'; then $(CYGPATH_W) 'file_io/vtk.cxx'; else $(CYGPATH_W) '$(srcdir)/file_io/vtk.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) file_io/$(DEPDIR)/libPOLYmpi_a-vtk.Tpo file_io/$(DEPDIR)/libPOLYmpi_a-vtk.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='file_io/vtk.cxx' object='file_io/libPOLYmpi_a-vtk.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o file_io/libPOLYmpi_a-vtk.obj `if test -f 'file_io/vtk.cxx'; then $(CYGPATH_W) 'file_io/vtk.cxx'; else $(CYGPATH_W) '$(srcdir)/file_io/vtk.cxx'; fi`

file_io/libPOLYmpi_a-triangle_id.o: file_io/triangle_id.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT file_io/libPOLYmpi_a-triangle_id.o -MD -MP -MF file_io/$(DEPDIR)/libPOLYmpi_a-triangle_id.Tpo -c -o file_io/libPOLYmpi_a-triangle_id.o `test -f 'file_io/triangle_id.cxx' || echo '$(srcdir)/'`file_io/triangle_id.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) file_io/$(DEPDIR)/libPOLYmpi_a-triangle_id.Tpo file_io/$(DEPDIR)/libPOLYmpi_a-triangle_id.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='file_io/triangle_id.cxx' object='file_io/libPOLYmpi_a-triangle_id.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o file_io/libPOLYmpi_a-triangle_id.o `test -f 'file_io/triangle_id.cxx' || echo '$(srcdir)/'`file_io/triangle_id.cxx

file_io/libPOLYmpi_a-triangle_id.obj: file_io/triangle_id.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT file_io/libPOLYmpi_a-triangle_id.obj -MD -MP -MF file_io/$(DEPDIR)/libPOLYmpi_a-triangle_id.Tpo -c -o file_io/libPOLYmpi_a-triangle_id.obj `if test -f 'file_io/triangle_id.cxx'; then $(CYGPATH_W) 'file_io/triangle_id.cxx'; else $(CYGPATH_W) '$(srcdir)/file_io/triangle_id.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) file_io/$(DEPDIR)/libPOLYmpi_a-triangle_id.Tpo file_io/$(DEPDIR)/libPOLYmpi_a-triangle_id.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='file_io/triangle_id.cxx' object='file_io/libPOLYmpi_a-triangle_id.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o file_io/libPOLYmpi_a-triangle_id.obj `if test -f 'file_io/triangle_id.cxx'; then $(CYGPATH_W) 'file_io/triangle_id.cxx'; else $(CYGPATH_W) '$(srcdir)/file_io/triangle_id.cxx'; fi`

file_io/libPOLYmpi_a-TriMeshIO.o: file_io/TriMeshIO.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT file_io/libPOLYmpi_a-TriMeshIO.o -MD -MP -MF file_io/$(DEPDIR)/libPOLYmpi_a-TriMeshIO.Tpo -c -o file_io/libPOLYmpi_a-TriMeshIO.o `test -f 'file_io/TriMeshIO.cxx' || echo '$(srcdir)/'`file_io/TriMeshIO.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) file_io/$(DEPDIR)/libPOLYmpi_a-TriMeshIO.Tpo file_io/$(DEPDIR)/libPOLYmpi_a-TriMeshIO.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='file_io/TriMeshIO.cxx' object='file_io/libPOLYmpi_a-TriMeshIO.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o file_io/libPOLYmpi_a-TriMeshIO.o `test -f 'file_io/TriMeshIO.cxx' || echo '$(srcdir)/'`file_io/TriMeshIO.cxx

file_io/libPOLYmpi_a-TriMeshIO.obj: file_io/TriMeshIO.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT file_io/libPOLYmpi_a-TriMeshIO.obj -MD -MP -MF file_io/$(DEPDIR)/libPOLYmpi_a-TriMeshIO.Tpo -c -o file_io/libPOLYmpi_a-TriMeshIO.obj `if test -f 'file_io/TriMeshIO.cxx'; then $(CYGPATH_W) 'file_io/TriMeshIO.cxx'; else $(CYGPATH_W) '$(srcdir)/file_io/TriMeshIO.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) file_io/$(DEPDIR)/libPOLYmpi_a-TriMeshIO.Tpo file_io/$(DEPDIR)/libPOLYmpi_a-TriMeshIO.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='file_io/TriMeshIO.cxx' object='file_io/libPOLYmpi_a-TriMeshIO.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o file_io/libPOLYmpi_a-TriMeshIO.obj `if test -f 'file_io/TriMeshIO.cxx'; then $(CYGPATH_W) 'file_io/TriMeshIO.cxx'; else $(CYGPATH_W) '$(srcdir)/file_io/TriMeshIO.cxx'; fi`

groups/libPOLYmpi_a-PolygonGroup.o: groups/PolygonGroup.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT groups/libPOLYmpi_a-PolygonGroup.o -MD -MP -MF groups/$(DEPDIR)/libPOLYmpi_a-PolygonGroup.Tpo -c -o groups/libPOLYmpi_a-PolygonGroup.o `test -f 'groups/PolygonGroup.cxx' || echo '$(srcdir)/'`groups/PolygonGroup.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) groups/$(DEPDIR)/libPOLYmpi_a-PolygonGroup.Tpo groups/$(DEPDIR)/libPOLYmpi_a-PolygonGroup.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='groups/PolygonGroup.cxx' object='groups/libPOLYmpi_a-PolygonGroup.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o groups/libPOLYmpi_a-PolygonGroup.o `test -f 'groups/PolygonGroup.cxx' || echo '$(srcdir)/'`groups/PolygonGroup.cxx

groups/libPOLYmpi_a-PolygonGroup.obj: groups/PolygonGroup.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT groups/libPOLYmpi_a-PolygonGroup.obj -MD -MP -MF groups/$(DEPDIR)/libPOLYmpi_a-PolygonGroup.Tpo -c -o groups/libPOLYmpi_a-PolygonGroup.obj `if test -f 'groups/PolygonGroup.cxx'; then $(CYGPATH_W) 'groups/PolygonGroup.cxx'; else $(CYGPATH_W) '$(srcdir)/groups/PolygonGroup.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) groups/$(DEPDIR)/libPOLYmpi_a-PolygonGroup.Tpo groups/$(DEPDIR)/libPOLYmpi_a-PolygonGroup.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='groups/PolygonGroup.cxx' object='groups/libPOLYmpi_a-PolygonGroup.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o groups/libPOLYmpi_a-PolygonGroup.obj `if test -f 'groups/PolygonGroup.cxx'; then $(CYGPATH_W) 'groups/PolygonGroup.cxx'; else $(CYGPATH_W) '$(srcdir)/groups/PolygonGroup.cxx'; fi`

groups/libPOLYmpi_a-PolygonGroupFactory.o: groups/PolygonGroupFactory.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT groups/libPOLYmpi_a-PolygonGroupFactory.o -MD -MP -MF groups/$(DEPDIR)/libPOLYmpi_a-PolygonGroupFactory.Tpo -c -o groups/libPOLYmpi_a-PolygonGroupFactory.o `test -f 'groups/PolygonGroupFactory.cxx' || echo '$(srcdir)/'`groups/PolygonGroupFactory.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) groups/$(DEPDIR)/libPOLYmpi_a-PolygonGroupFactory.Tpo groups/$(DEPDIR)/libPOLYmpi_a-PolygonGroupFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='groups/PolygonGroupFactory.cxx' object='groups/libPOLYmpi_a-PolygonGroupFactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o groups/libPOLYmpi_a-PolygonGroupFactory.o `test -f 'groups/PolygonGroupFactory.cxx' || echo '$(srcdir)/'`groups/PolygonGroupFactory.cxx

groups/libPOLYmpi_a-PolygonGroupFactory.obj: groups/PolygonGroupFactory.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT groups/libPOLYmpi_a-PolygonGroupFactory.obj -MD -MP -MF groups/$(DEPDIR)/libPOLYmpi_a-PolygonGroupFactory.Tpo -c -o groups/libPOLYmpi_a-PolygonGroupFactory.obj `if test -f 'groups/PolygonGroupFactory.cxx'; then $(CYGPATH_W) 'groups/PolygonGroupFactory.cxx'; else $(CYGPATH_W) '$(srcdir)/groups/PolygonGroupFactory.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) groups/$(DEPDIR)/libPOLYmpi_a-PolygonGroupFactory.Tpo groups/$(DEPDIR)/libPOLYmpi_a-PolygonGroupFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='groups/PolygonGroupFactory.cxx' object='groups/libPOLYmpi_a-PolygonGroupFactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o groups/libPOLYmpi_a-PolygonGroupFactory.obj `if test -f 'groups/PolygonGroupFactory.cxx'; then $(CYGPATH_W) 'groups/PolygonGroupFactory.cxx'; else $(CYGPATH_W) '$(srcdir)/groups/PolygonGroupFactory.cxx'; fi`

polygons/libPOLYmpi_a-DVertex.o: polygons/DVertex.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLYmpi_a-DVertex.o -MD -MP -MF polygons/$(DEPDIR)/libPOLYmpi_a-DVertex.Tpo -c -o polygons/libPOLYmpi_a-DVertex.o `test -f 'polygons/DVertex.cxx' || echo '$(srcdir)/'`polygons/DVertex.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLYmpi_a-DVertex.Tpo polygons/$(DEPDIR)/libPOLYmpi_a-DVertex.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/DVertex.cxx' object='polygons/libPOLYmpi_a-DVertex.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLYmpi_a-DVertex.o `test -f 'polygons/DVertex.cxx' || echo '$(srcdir)/'`polygons/DVertex.cxx

polygons/libPOLYmpi_a-DVertex.obj: polygons/DVertex.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLYmpi_a-DVertex.obj -MD -MP -MF polygons/$(DEPDIR)/libPOLYmpi_a-DVertex.Tpo -c -o polygons/libPOLYmpi_a-DVertex.obj `if test -f 'polygons/DVertex.cxx'; then $(CYGPATH_W) 'polygons/DVertex.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/DVertex.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLYmpi_a-DVertex.Tpo polygons/$(DEPDIR)/libPOLYmpi_a-DVertex.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/DVertex.cxx' object='polygons/libPOLYmpi_a-DVertex.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLYmpi_a-DVertex.obj `if test -f 'polygons/DVertex.cxx'; then $(CYGPATH_W) 'polygons/DVertex.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/DVertex.cxx'; fi`

polygons/libPOLYmpi_a-DVertexManager.o: polygons/DVertexManager.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLYmpi_a-DVertexManager.o -MD -MP -MF polygons/$(DEPDIR)/libPOLYmpi_a-DVertexManager.Tpo -c -o polygons/libPOLYmpi_a-DVertexManager.o `test -f 'polygons/DVertexManager.cxx' || echo '$(srcdir)/'`polygons/DVertexManager.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLYmpi_a-DVertexManager.Tpo polygons/$(DEPDIR)/libPOLYmpi_a-DVertexManager.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/DVertexManager.cxx' object='polygons/libPOLYmpi_a-DVertexManager.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLYmpi_a-DVertexManager.o `test -f 'polygons/DVertexManager.cxx' || echo '$(srcdir)/'`polygons/DVertexManager.cxx

polygons/libPOLYmpi_a-DVertexManager.obj: polygons/DVertexManager.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLYmpi_a-DVertexManager.obj -MD -MP -MF polygons/$(DEPDIR)/libPOLYmpi_a-DVertexManager.Tpo -c -o polygons/libPOLYmpi_a-DVertexManager.obj `if test -f 'polygons/DVertexManager.cxx'; then $(CYGPATH_W) 'polygons/DVertexManager.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/DVertexManager.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLYmpi_a-DVertexManager.Tpo polygons/$(DEPDIR)/libPOLYmpi_a-DVertexManager.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/DVertexManager.cxx' object='polygons/libPOLYmpi_a-DVertexManager.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLYmpi_a-DVertexManager.obj `if test -f 'polygons/DVertexManager.cxx'; then $(CYGPATH_W) 'polygons/DVertexManager.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/DVertexManager.cxx'; fi`

polygons/libPOLYmpi_a-DVertexTriangle.o: polygons/DVertexTriangle.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLYmpi_a-DVertexTriangle.o -MD -MP -MF polygons/$(DEPDIR)/libPOLYmpi_a-DVertexTriangle.Tpo -c -o polygons/libPOLYmpi_a-DVertexTriangle.o `test -f 'polygons/DVertexTriangle.cxx' || echo '$(srcdir)/'`polygons/DVertexTriangle.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLYmpi_a-DVertexTriangle.Tpo polygons/$(DEPDIR)/libPOLYmpi_a-DVertexTriangle.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/DVertexTriangle.cxx' object='polygons/libPOLYmpi_a-DVertexTriangle.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLYmpi_a-DVertexTriangle.o `test -f 'polygons/DVertexTriangle.cxx' || echo '$(srcdir)/'`polygons/DVertexTriangle.cxx

polygons/libPOLYmpi_a-DVertexTriangle.obj: polygons/DVertexTriangle.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLYmpi_a-DVertexTriangle.obj -MD -MP -MF polygons/$(DEPDIR)/libPOLYmpi_a-DVertexTriangle.Tpo -c -o polygons/libPOLYmpi_a-DVertexTriangle.obj `if test -f 'polygons/DVertexTriangle.cxx'; then $(CYGPATH_W) 'polygons/DVertexTriangle.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/DVertexTriangle.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLYmpi_a-DVertexTriangle.Tpo polygons/$(DEPDIR)/libPOLYmpi_a-DVertexTriangle.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/DVertexTriangle.cxx' object='polygons/libPOLYmpi_a-DVertexTriangle.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLYmpi_a-DVertexTriangle.obj `if test -f 'polygons/DVertexTriangle.cxx'; then $(CYGPATH_W) 'polygons/DVertexTriangle.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/DVertexTriangle.cxx'; fi`

polygons/libPOLYmpi_a-Polygons.o: polygons/Polygons.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLYmpi_a-Polygons.o -MD -MP -MF polygons/$(DEPDIR)/libPOLYmpi_a-Polygons.Tpo -c -o polygons/libPOLYmpi_a-Polygons.o `test -f 'polygons/Polygons.cxx' || echo '$(srcdir)/'`polygons/Polygons.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLYmpi_a-Polygons.Tpo polygons/$(DEPDIR)/libPOLYmpi_a-Polygons.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/Polygons.cxx' object='polygons/libPOLYmpi_a-Polygons.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLYmpi_a-Polygons.o `test -f 'polygons/Polygons.cxx' || echo '$(srcdir)/'`polygons/Polygons.cxx

polygons/libPOLYmpi_a-Polygons.obj: polygons/Polygons.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLYmpi_a-Polygons.obj -MD -MP -MF polygons/$(DEPDIR)/libPOLYmpi_a-Polygons.Tpo -c -o polygons/libPOLYmpi_a-Polygons.obj `if test -f 'polygons/Polygons.cxx'; then $(CYGPATH_W) 'polygons/Polygons.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/Polygons.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLYmpi_a-Polygons.Tpo polygons/$(DEPDIR)/libPOLYmpi_a-Polygons.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/Polygons.cxx' object='polygons/libPOLYmpi_a-Polygons.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLYmpi_a-Polygons.obj `if test -f 'polygons/Polygons.cxx'; then $(CYGPATH_W) 'polygons/Polygons.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/Polygons.cxx'; fi`

polygons/libPOLYmpi_a-PrivateTriangle.o: polygons/PrivateTriangle.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLYmpi_a-PrivateTriangle.o -MD -MP -MF polygons/$(DEPDIR)/libPOLYmpi_a-PrivateTriangle.Tpo -c -o polygons/libPOLYmpi_a-PrivateTriangle.o `test -f 'polygons/PrivateTriangle.cxx' || echo '$(srcdir)/'`polygons/PrivateTriangle.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLYmpi_a-PrivateTriangle.Tpo polygons/$(DEPDIR)/libPOLYmpi_a-PrivateTriangle.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/PrivateTriangle.cxx' object='polygons/libPOLYmpi_a-PrivateTriangle.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLYmpi_a-PrivateTriangle.o `test -f 'polygons/PrivateTriangle.cxx' || echo '$(srcdir)/'`polygons/PrivateTriangle.cxx

polygons/libPOLYmpi_a-PrivateTriangle.obj: polygons/PrivateTriangle.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLYmpi_a-PrivateTriangle.obj -MD -MP -MF polygons/$(DEPDIR)/libPOLYmpi_a-PrivateTriangle.Tpo -c -o polygons/libPOLYmpi_a-PrivateTriangle.obj `if test -f 'polygons/PrivateTriangle.cxx'; then $(CYGPATH_W) 'polygons/PrivateTriangle.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/PrivateTriangle.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLYmpi_a-PrivateTriangle.Tpo polygons/$(DEPDIR)/libPOLYmpi_a-PrivateTriangle.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/PrivateTriangle.cxx' object='polygons/libPOLYmpi_a-PrivateTriangle.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLYmpi_a-PrivateTriangle.obj `if test -f 'polygons/PrivateTriangle.cxx'; then $(CYGPATH_W) 'polygons/PrivateTriangle.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/PrivateTriangle.cxx'; fi`

polygons/libPOLYmpi_a-Triangle.o: polygons/Triangle.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLYmpi_a-Triangle.o -MD -MP -MF polygons/$(DEPDIR)/libPOLYmpi_a-Triangle.Tpo -c -o polygons/libPOLYmpi_a-Triangle.o `test -f 'polygons/Triangle.cxx' || echo '$(srcdir)/'`polygons/Triangle.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLYmpi_a-Triangle.Tpo polygons/$(DEPDIR)/libPOLYmpi_a-Triangle.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/Triangle.cxx' object='polygons/libPOLYmpi_a-Triangle.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLYmpi_a-Triangle.o `test -f 'polygons/Triangle.cxx' || echo '$(srcdir)/'`polygons/Triangle.cxx

polygons/libPOLYmpi_a-Triangle.obj: polygons/Triangle.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLYmpi_a-Triangle.obj -MD -MP -MF polygons/$(DEPDIR)/libPOLYmpi_a-Triangle.Tpo -c -o polygons/libPOLYmpi_a-Triangle.obj `if test -f 'polygons/Triangle.cxx'; then $(CYGPATH_W) 'polygons/Triangle.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/Triangle.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLYmpi_a-Triangle.Tpo polygons/$(DEPDIR)/libPOLYmpi_a-Triangle.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/Triangle.cxx' object='polygons/libPOLYmpi_a-Triangle.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLYmpi_a-Triangle.obj `if test -f 'polygons/Triangle.cxx'; then $(CYGPATH_W) 'polygons/Triangle.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/Triangle.cxx'; fi`

polygons/libPOLYmpi_a-TriMesh.o: polygons/TriMesh.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLYmpi_a-TriMesh.o -MD -MP -MF polygons/$(DEPDIR)/libPOLYmpi_a-TriMesh.Tpo -c -o polygons/libPOLYmpi_a-TriMesh.o `test -f 'polygons/TriMesh.cxx' || echo '$(srcdir)/'`polygons/TriMesh.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLYmpi_a-TriMesh.Tpo polygons/$(DEPDIR)/libPOLYmpi_a-TriMesh.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/TriMesh.cxx' object='polygons/libPOLYmpi_a-TriMesh.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLYmpi_a-TriMesh.o `test -f 'polygons/TriMesh.cxx' || echo '$(srcdir)/'`polygons/TriMesh.cxx

polygons/libPOLYmpi_a-TriMesh.obj: polygons/TriMesh.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLYmpi_a-TriMesh.obj -MD -MP -MF polygons/$(DEPDIR)/libPOLYmpi_a-TriMesh.Tpo -c -o polygons/libPOLYmpi_a-TriMesh.obj `if test -f 'polygons/TriMesh.cxx'; then $(CYGPATH_W) 'polygons/TriMesh.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/TriMesh.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLYmpi_a-TriMesh.Tpo polygons/$(DEPDIR)/libPOLYmpi_a-TriMesh.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/TriMesh.cxx' object='polygons/libPOLYmpi_a-TriMesh.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLYmpi_a-TriMesh.obj `if test -f 'polygons/TriMesh.cxx'; then $(CYGPATH_W) 'polygons/TriMesh.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/TriMesh.cxx'; fi`

polygons/libPOLYmpi_a-VElement.o: polygons/VElement.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLYmpi_a-VElement.o -MD -MP -MF polygons/$(DEPDIR)/libPOLYmpi_a-VElement.Tpo -c -o polygons/libPOLYmpi_a-VElement.o `test -f 'polygons/VElement.cxx' || echo '$(srcdir)/'`polygons/VElement.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLYmpi_a-VElement.Tpo polygons/$(DEPDIR)/libPOLYmpi_a-VElement.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/VElement.cxx' object='polygons/libPOLYmpi_a-VElement.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLYmpi_a-VElement.o `test -f 'polygons/VElement.cxx' || echo '$(srcdir)/'`polygons/VElement.cxx

polygons/libPOLYmpi_a-VElement.obj: polygons/VElement.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLYmpi_a-VElement.obj -MD -MP -MF polygons/$(DEPDIR)/libPOLYmpi_a-VElement.Tpo -c -o polygons/libPOLYmpi_a-VElement.obj `if test -f 'polygons/VElement.cxx'; then $(CYGPATH_W) 'polygons/VElement.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/VElement.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLYmpi_a-VElement.Tpo polygons/$(DEPDIR)/libPOLYmpi_a-VElement.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/VElement.cxx' object='polygons/libPOLYmpi_a-VElement.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLYmpi_a-VElement.obj `if test -f 'polygons/VElement.cxx'; then $(CYGPATH_W) 'polygons/VElement.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/VElement.cxx'; fi`

polygons/libPOLYmpi_a-Vertex.o: polygons/Vertex.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLYmpi_a-Vertex.o -MD -MP -MF polygons/$(DEPDIR)/libPOLYmpi_a-Vertex.Tpo -c -o polygons/libPOLYmpi_a-Vertex.o `test -f 'polygons/Vertex.cxx' || echo '$(srcdir)/'`polygons/Vertex.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLYmpi_a-Vertex.Tpo polygons/$(DEPDIR)/libPOLYmpi_a-Vertex.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/Vertex.cxx' object='polygons/libPOLYmpi_a-Vertex.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLYmpi_a-Vertex.o `test -f 'polygons/Vertex.cxx' || echo '$(srcdir)/'`polygons/Vertex.cxx

polygons/libPOLYmpi_a-Vertex.obj: polygons/Vertex.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLYmpi_a-Vertex.obj -MD -MP -MF polygons/$(DEPDIR)/libPOLYmpi_a-Vertex.Tpo -c -o polygons/libPOLYmpi_a-Vertex.obj `if test -f 'polygons/Vertex.cxx'; then $(CYGPATH_W) 'polygons/Vertex.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/Vertex.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLYmpi_a-Vertex.Tpo polygons/$(DEPDIR)/libPOLYmpi_a-Vertex.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/Vertex.cxx' object='polygons/libPOLYmpi_a-Vertex.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLYmpi_a-Vertex.obj `if test -f 'polygons/Vertex.cxx'; then $(CYGPATH_W) 'polygons/Vertex.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/Vertex.cxx'; fi`

polygons/libPOLYmpi_a-VertexList.o: polygons/VertexList.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLYmpi_a-VertexList.o -MD -MP -MF polygons/$(DEPDIR)/libPOLYmpi_a-VertexList.Tpo -c -o polygons/libPOLYmpi_a-VertexList.o `test -f 'polygons/VertexList.cxx' || echo '$(srcdir)/'`polygons/VertexList.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLYmpi_a-VertexList.Tpo polygons/$(DEPDIR)/libPOLYmpi_a-VertexList.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/VertexList.cxx' object='polygons/libPOLYmpi_a-VertexList.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLYmpi_a-VertexList.o `test -f 'polygons/VertexList.cxx' || echo '$(srcdir)/'`polygons/VertexList.cxx

polygons/libPOLYmpi_a-VertexList.obj: polygons/VertexList.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLYmpi_a-VertexList.obj -MD -MP -MF polygons/$(DEPDIR)/libPOLYmpi_a-VertexList.Tpo -c -o polygons/libPOLYmpi_a-VertexList.obj `if test -f 'polygons/VertexList.cxx'; then $(CYGPATH_W) 'polygons/VertexList.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/VertexList.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLYmpi_a-VertexList.Tpo polygons/$(DEPDIR)/libPOLYmpi_a-VertexList.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/VertexList.cxx' object='polygons/libPOLYmpi_a-VertexList.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLYmpi_a-VertexList.obj `if test -f 'polygons/VertexList.cxx'; then $(CYGPATH_W) 'polygons/VertexList.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/VertexList.cxx'; fi`

polygons/libPOLYmpi_a-VertKDT.o: polygons/VertKDT.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLYmpi_a-VertKDT.o -MD -MP -MF polygons/$(DEPDIR)/libPOLYmpi_a-VertKDT.Tpo -c -o polygons/libPOLYmpi_a-VertKDT.o `test -f 'polygons/VertKDT.cxx' || echo '$(srcdir)/'`polygons/VertKDT.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLYmpi_a-VertKDT.Tpo polygons/$(DEPDIR)/libPOLYmpi_a-VertKDT.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/VertKDT.cxx' object='polygons/libPOLYmpi_a-VertKDT.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLYmpi_a-VertKDT.o `test -f 'polygons/VertKDT.cxx' || echo '$(srcdir)/'`polygons/VertKDT.cxx

polygons/libPOLYmpi_a-VertKDT.obj: polygons/VertKDT.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLYmpi_a-VertKDT.obj -MD -MP -MF polygons/$(DEPDIR)/libPOLYmpi_a-VertKDT.Tpo -c -o polygons/libPOLYmpi_a-VertKDT.obj `if test -f 'polygons/VertKDT.cxx'; then $(CYGPATH_W) 'polygons/VertKDT.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/VertKDT.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLYmpi_a-VertKDT.Tpo polygons/$(DEPDIR)/libPOLYmpi_a-VertKDT.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/VertKDT.cxx' object='polygons/libPOLYmpi_a-VertKDT.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLYmpi_a-VertKDT.obj `if test -f 'polygons/VertKDT.cxx'; then $(CYGPATH_W) 'polygons/VertKDT.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/VertKDT.cxx'; fi`

polygons/libPOLYmpi_a-VertKDTElem.o: polygons/VertKDTElem.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLYmpi_a-VertKDTElem.o -MD -MP -MF polygons/$(DEPDIR)/libPOLYmpi_a-VertKDTElem.Tpo -c -o polygons/libPOLYmpi_a-VertKDTElem.o `test -f 'polygons/VertKDTElem.cxx' || echo '$(srcdir)/'`polygons/VertKDTElem.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLYmpi_a-VertKDTElem.Tpo polygons/$(DEPDIR)/libPOLYmpi_a-VertKDTElem.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/VertKDTElem.cxx' object='polygons/libPOLYmpi_a-VertKDTElem.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLYmpi_a-VertKDTElem.o `test -f 'polygons/VertKDTElem.cxx' || echo '$(srcdir)/'`polygons/VertKDTElem.cxx

polygons/libPOLYmpi_a-VertKDTElem.obj: polygons/VertKDTElem.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLYmpi_a-VertKDTElem.obj -MD -MP -MF polygons/$(DEPDIR)/libPOLYmpi_a-VertKDTElem.Tpo -c -o polygons/libPOLYmpi_a-VertKDTElem.obj `if test -f 'polygons/VertKDTElem.cxx'; then $(CYGPATH_W) 'polygons/VertKDTElem.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/VertKDTElem.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLYmpi_a-VertKDTElem.Tpo polygons/$(DEPDIR)/libPOLYmpi_a-VertKDTElem.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/VertKDTElem.cxx' object='polygons/libPOLYmpi_a-VertKDTElem.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLYmpi_a-VertKDTElem.obj `if test -f 'polygons/VertKDTElem.cxx'; then $(CYGPATH_W) 'polygons/VertKDTElem.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/VertKDTElem.cxx'; fi`

polygons/libPOLYmpi_a-VertKDTNode.o: polygons/VertKDTNode.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLYmpi_a-VertKDTNode.o -MD -MP -MF polygons/$(DEPDIR)/libPOLYmpi_a-VertKDTNode.Tpo -c -o polygons/libPOLYmpi_a-VertKDTNode.o `test -f 'polygons/VertKDTNode.cxx' || echo '$(srcdir)/'`polygons/VertKDTNode.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLYmpi_a-VertKDTNode.Tpo polygons/$(DEPDIR)/libPOLYmpi_a-VertKDTNode.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/VertKDTNode.cxx' object='polygons/libPOLYmpi_a-VertKDTNode.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLYmpi_a-VertKDTNode.o `test -f 'polygons/VertKDTNode.cxx' || echo '$(srcdir)/'`polygons/VertKDTNode.cxx

polygons/libPOLYmpi_a-VertKDTNode.obj: polygons/VertKDTNode.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLYmpi_a-VertKDTNode.obj -MD -MP -MF polygons/$(DEPDIR)/libPOLYmpi_a-VertKDTNode.Tpo -c -o polygons/libPOLYmpi_a-VertKDTNode.obj `if test -f 'polygons/VertKDTNode.cxx'; then $(CYGPATH_W) 'polygons/VertKDTNode.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/VertKDTNode.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLYmpi_a-VertKDTNode.Tpo polygons/$(DEPDIR)/libPOLYmpi_a-VertKDTNode.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/VertKDTNode.cxx' object='polygons/libPOLYmpi_a-VertKDTNode.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLYmpi_a-VertKDTNode.obj `if test -f 'polygons/VertKDTNode.cxx'; then $(CYGPATH_W) 'polygons/VertKDTNode.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/VertKDTNode.cxx'; fi`

polygons/libPOLYmpi_a-VNode.o: polygons/VNode.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLYmpi_a-VNode.o -MD -MP -MF polygons/$(DEPDIR)/libPOLYmpi_a-VNode.Tpo -c -o polygons/libPOLYmpi_a-VNode.o `test -f 'polygons/VNode.cxx' || echo '$(srcdir)/'`polygons/VNode.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLYmpi_a-VNode.Tpo polygons/$(DEPDIR)/libPOLYmpi_a-VNode.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/VNode.cxx' object='polygons/libPOLYmpi_a-VNode.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLYmpi_a-VNode.o `test -f 'polygons/VNode.cxx' || echo '$(srcdir)/'`polygons/VNode.cxx

polygons/libPOLYmpi_a-VNode.obj: polygons/VNode.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLYmpi_a-VNode.obj -MD -MP -MF polygons/$(DEPDIR)/libPOLYmpi_a-VNode.Tpo -c -o polygons/libPOLYmpi_a-VNode.obj `if test -f 'polygons/VNode.cxx'; then $(CYGPATH_W) 'polygons/VNode.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/VNode.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLYmpi_a-VNode.Tpo polygons/$(DEPDIR)/libPOLYmpi_a-VNode.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/VNode.cxx' object='polygons/libPOLYmpi_a-VNode.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLYmpi_a-VNode.obj `if test -f 'polygons/VNode.cxx'; then $(CYGPATH_W) 'polygons/VNode.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/VNode.cxx'; fi`

polygons/libPOLYmpi_a-VTree.o: polygons/VTree.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLYmpi_a-VTree.o -MD -MP -MF polygons/$(DEPDIR)/libPOLYmpi_a-VTree.Tpo -c -o polygons/libPOLYmpi_a-VTree.o `test -f 'polygons/VTree.cxx' || echo '$(srcdir)/'`polygons/VTree.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLYmpi_a-VTree.Tpo polygons/$(DEPDIR)/libPOLYmpi_a-VTree.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/VTree.cxx' object='polygons/libPOLYmpi_a-VTree.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLYmpi_a-VTree.o `test -f 'polygons/VTree.cxx' || echo '$(srcdir)/'`polygons/VTree.cxx

polygons/libPOLYmpi_a-VTree.obj: polygons/VTree.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT polygons/libPOLYmpi_a-VTree.obj -MD -MP -MF polygons/$(DEPDIR)/libPOLYmpi_a-VTree.Tpo -c -o polygons/libPOLYmpi_a-VTree.obj `if test -f 'polygons/VTree.cxx'; then $(CYGPATH_W) 'polygons/VTree.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/VTree.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) polygons/$(DEPDIR)/libPOLYmpi_a-VTree.Tpo polygons/$(DEPDIR)/libPOLYmpi_a-VTree.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='polygons/VTree.cxx' object='polygons/libPOLYmpi_a-VTree.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o polygons/libPOLYmpi_a-VTree.obj `if test -f 'polygons/VTree.cxx'; then $(CYGPATH_W) 'polygons/VTree.cxx'; else $(CYGPATH_W) '$(srcdir)/polygons/VTree.cxx'; fi`

util/libPOLYmpi_a-time.o: util/time.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT util/libPOLYmpi_a-time.o -MD -MP -MF util/$(DEPDIR)/libPOLYmpi_a-time.Tpo -c -o util/libPOLYmpi_a-time.o `test -f 'util/time.cxx' || echo '$(srcdir)/'`util/time.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libPOLYmpi_a-time.Tpo util/$(DEPDIR)/libPOLYmpi_a-time.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='util/time.cxx' object='util/libPOLYmpi_a-time.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libPOLYmpi_a-time.o `test -f 'util/time.cxx' || echo '$(srcdir)/'`util/time.cxx

util/libPOLYmpi_a-time.obj: util/time.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -MT util/libPOLYmpi_a-time.obj -MD -MP -MF util/$(DEPDIR)/libPOLYmpi_a-time.Tpo -c -o util/libPOLYmpi_a-time.obj `if test -f 'util/time.cxx'; then $(CYGPATH_W) 'util/time.cxx'; else $(CYGPATH_W) '$(srcdir)/util/time.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libPOLYmpi_a-time.Tpo util/$(DEPDIR)/libPOLYmpi_a-time.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='util/time.cxx' object='util/libPOLYmpi_a-time.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libPOLYmpi_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libPOLYmpi_a-time.obj `if test -f 'util/time.cxx'; then $(CYGPATH_W) 'util/time.cxx'; else $(CYGPATH_W) '$(srcdir)/util/time.cxx'; fi`
install-nobase_includeHEADERS: $(nobase_include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(nobase_include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	$(am__nobase_list) | while read dir files; do \
	  xfiles=; for file in $$files; do \
	    if test -f "$$file"; then xfiles="$$xfiles $$file"; \
	    else xfiles="$$xfiles $(srcdir)/$$file"; fi; done; \
	  test -z "$$xfiles" || { \
	    test "x$$dir" = x. || { \
	      echo " $(MKDIR_P) '$(DESTDIR)$(includedir)/$$dir'"; \
	      $(MKDIR_P) "$(DESTDIR)$(includedir)/$$dir"; }; \
	    echo " $(INSTALL_HEADER) $$xfiles '$(DESTDIR)$(includedir)/$$dir'"; \
	    $(INSTALL_HEADER) $$xfiles "$(DESTDIR)$(includedir)/$$dir" || exit $$?; }; \
	done

uninstall-nobase_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_include_HEADERS)'; test -n "$(includedir)" || list=; \
	$(am__nobase_strip_setup); files=`$(am__nobase_strip)`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f c_lang/$(DEPDIR)/$(am__dirstamp)
	-rm -f c_lang/$(am__dirstamp)
	-rm -f common/$(DEPDIR)/$(am__dirstamp)
	-rm -f common/$(am__dirstamp)
	-rm -f file_io/$(DEPDIR)/$(am__dirstamp)
	-rm -f file_io/$(am__dirstamp)
	-rm -f groups/$(DEPDIR)/$(am__dirstamp)
	-rm -f groups/$(am__dirstamp)
	-rm -f polygons/$(DEPDIR)/$(am__dirstamp)
	-rm -f polygons/$(am__dirstamp)
	-rm -f util/$(DEPDIR)/$(am__dirstamp)
	-rm -f util/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR) c_lang/$(DEPDIR) common/$(DEPDIR) file_io/$(DEPDIR) groups/$(DEPDIR) polygons/$(DEPDIR) util/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-nobase_includeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR) c_lang/$(DEPDIR) common/$(DEPDIR) file_io/$(DEPDIR) groups/$(DEPDIR) polygons/$(DEPDIR) util/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLIBRARIES uninstall-nobase_includeHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libLIBRARIES cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-libLIBRARIES install-man \
	install-nobase_includeHEADERS install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-libLIBRARIES \
	uninstall-nobase_includeHEADERS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
